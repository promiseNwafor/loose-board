{"version":3,"sources":["lib/firebase.js","Components/LoadingIndicator.jsx","Components/Auth/Login.jsx","Components/Auth/Register.jsx","Components/Auth/Auth.js","Components/Nav.jsx","Components/Admin/AddAccount.jsx","Components/User/AddReport.jsx","Components/Admin/Popup.jsx","Components/User/ManagerAnalytics.jsx","Components/Admin/Analytics.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","LoadingIndicator","height","width","type","color","timeout","Login","setAuthScreen","useContext","AuthScreen","setIsRegister","SetIsRegister","useState","email","setEmail","password","setPassword","loading","setLoading","passwordShown","setPasswordShown","resetInput","useEffect","className","src","alt","onChange","e","target","value","placeholder","aria-hidden","onClick","preventDefault","alert","auth","signInWithEmailAndPassword","then","console","log","currentUser","catch","err","message","Register","username","setUsername","isAdmin","setIsAdmin","confirmPassword","setConfirmPassword","addUser","togglePasswordVisiblity","includes","createUserWithEmailAndPassword","updateProfile","displayName","label","id","React","createContext","Auth","isRegister","Provider","Nav","name","path","handleLogout","AuthContext","showDropdown","setShowDropdown","to","onMouseOver","onMouseLeave","class","AddAccount","handleAddAccount","accountName","setAccountName","manager","setManager","platform","setPlatform","managers","setManagers","platformFb","setPlatformFb","platformTw","setPlatformTw","platformIg","setPlatformIg","platformLn","setPlatformLn","likesFb","setLikesFb","likesTw","setLikesTw","likesIg","setLikesIg","likesLn","setLikesLn","commentsFb","setCommentsFb","commentsTw","setCommentsTw","commentsIg","setCommentsIg","commentsLn","setCommentsLn","sharesFb","setSharesFb","sharesTw","setSharesTw","sharesIg","setSharesIg","sharesLn","setSharesLn","leadsFb","setLeadsFb","leadsTw","setLeadsTw","leadsIg","setLeadsIg","leadsLn","setLeadsLn","saves","setSaves","impressionsFb","setImpressionsFb","impressionsTw","setImpressionsTw","impressionsIg","setImpressionsIg","impressionsLn","setImpressionsLn","viewsFb","setViewsFb","viewsTw","setViewsTw","viewsIg","setViewsIg","viewsLn","setViewsLn","downloadsFb","setDownloadsFb","downloadsTw","setDownloadsTw","downloadsIg","setDownloadsIg","downloadsLn","setDownloadsLn","followersFb","setFollowersFb","followersTw","setFollowersTw","followersIg","setFollowersIg","followersLn","setFollowersLn","reachFb","setReachFb","reachTw","setReachTw","reachIg","setReachIg","reachLn","setReachLn","formCount","setFormCount","pushForm","setPushForm","platformList","setPlatformList","getManagers","firestore","collection","where","onSnapshot","querySnapshot","items","forEach","doc","push","data","date","Date","day","getFullYear","getMonth","getDate","showFacebook","required","showTwitter","showInstagram","showLinkedin","showForm","handlePlatformChange","options","map","item","i","facebook","likes","parseInt","comments","reach","shares","leads","views","impressions","followers","downloads","twitter","instagram","linkedin","AddReport","managerAccounts","addToFacebook","addToInstagram","addToLinkedin","addToTwitter","reportDate","setReportDate","postNoFb","setPostNoFb","postNoTw","setPostNoTw","postNoIg","setPostNoIg","postNoLn","setPostNoLn","today","handleBtnClick","a","posts","Popup","props","onMouseUp","handleClose","content","ManagerAnalytics","accountsRef","accounts","setAccounts","accFacebook","setAccFacebook","accTwitter","setAccTwitter","accInstagram","setAccInstagram","accLinkedin","setAccLinkedin","metric","setMetric","totalMetricFacebook","setTotalMetricFacebook","numberFacebook","setNumberFacebook","itemTotalFacebook","setItemTotalFacebook","totalMetricTwitter","setTotalMetricTwitter","numberTwitter","setNumberTwitter","itemTotalTwitter","setItemTotalTwitter","totalMetricInstagram","setTotalMetricInstagram","numberInstagram","setNumberInstagram","itemTotalInstagram","setItemTotalInstagram","totalMetricLinkedin","setTotalMetricLinkedin","numberLinkedin","setNumberLinkedin","itemTotalLinkedin","setItemTotalLinkedin","setError","isOpen","setIsOpen","isLoading","setIsLoading","viewFacebook","account","itemTotal","length","get","response","document","fetchedItem","itemMetric","finalAns","Math","round","toFixed","viewTwitter","viewInstagram","viewLinkedin","togglePopup","abortController","AbortController","signal","abort","undefined","Analytics","list","App","locale","setLocale","setIsLogged","setManagerAccounts","setCurrentUser","isWeekend","setIsWeekend","handleSendEmail","send","from_name","to_name","to_email","reply_to","status","text","localStorage","getItem","onAuthStateChanged","user","currentTime","year","month","atSix","positiveDifference","getTime","negativeDifference","delay","handleInterval","setInterval","clearInterval","setTimeout","getDay","newAccount","res","exists","update","window","location","pathname","set","signOut","setItem","newUser","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7d4a725f.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth' \r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n\r\n","import React from 'react'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from \"react-loader-spinner\"\r\n\r\nfunction LoadingIndicator({height, width, type}) {\r\n    return (\r\n        <Loader\r\n          type={type}\r\n          color=\"#0c63e6\"\r\n          height={height}\r\n          width={width}\r\n          timeout={3000} //3 secs\r\n        />\r\n      );  \r\n}\r\n\r\nexport default LoadingIndicator\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport firebase from \"../../lib/firebase\";\r\nimport { AuthScreen } from \"../../App\";\r\nimport { SetIsRegister } from \"./Auth\";\r\nimport \"./auth.css\";\r\nimport LoadingIndicator from \"../LoadingIndicator\";\r\n\r\nfunction Login() {\r\n  const { setAuthScreen } = useContext(AuthScreen);\r\n  const setIsRegister = useContext(SetIsRegister);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    if (email === \"\" || password === \"\") {\r\n      alert(\"Input details\");\r\n    } else {\r\n      setLoading(true);\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          setAuthScreen();\r\n        })\r\n        .then(() => {\r\n          setLoading(false);\r\n          resetInput();\r\n          // window.location.pathname = \"/\";\r\n          console.log(firebase.auth().currentUser);\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          alert(err.message)\r\n          // console.error(err);\r\n        });\r\n    }\r\n    // setLoading(false);\r\n  };\r\n\r\n  const resetInput = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n\r\n  useEffect(() => {}, [loading]);\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <div className=\"logo\">\r\n        <img src=\"/logo.png\" alt=\"Loosemedia logo\" />\r\n      </div>\r\n      <div className=\"Box\">\r\n        <div className=\"wrap\">\r\n          <div className=\"h4\">\r\n            <h4>Login</h4>\r\n          </div>\r\n          <form>\r\n            <div className=\"Input\">\r\n              <input\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n              />\r\n            </div>\r\n            <div className=\"Input password\">\r\n              <input\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                type={passwordShown ? \"text\" : \"password\"}\r\n              />\r\n              <i\r\n                className=\"fa fa-eye\"\r\n                aria-hidden=\"true\"\r\n                onClick={togglePasswordVisiblity}\r\n              ></i>\r\n            </div>\r\n          </form>\r\n          {/* <div className=\"Btn\"> */}\r\n          {loading ? (\r\n            <center>\r\n              <LoadingIndicator\r\n                className=\"loader\"\r\n                type=\"Circles\"\r\n                height={30}\r\n                width={30}\r\n              />\r\n            </center>\r\n          ) : (\r\n            <div className=\"Btn\">\r\n              <button onClick={login} type=\"submit\">\r\n                LOGIN\r\n              </button>\r\n            </div>\r\n          )}\r\n          {/* </div> */}\r\n        </div>\r\n      </div>\r\n      <div className=\"foot\">\r\n        <p onClick={() => setIsRegister(true)}>Don't have an account?</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport firebase from \"../../lib/firebase\";\r\nimport { AuthScreen } from \"../../App\";\r\nimport \"./auth.css\";\r\nimport { SetIsRegister } from \"./Auth\";\r\nimport LoadingIndicator from \"../LoadingIndicator\";\r\n\r\nfunction Register() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n\r\n  const setIsRegister = useContext(SetIsRegister);\r\n  const { setAuthScreen, addUser } = useContext(AuthScreen);\r\n\r\n  const admin = () => {\r\n    email.includes(\"seun\") ||\r\n    email.includes(\"ized\") ||\r\n    email.includes(\"kemi\") ||\r\n    email.includes(\"charles\") ||\r\n    email.includes(\"ughoro\") ||\r\n    email.includes(\"joan\") ||\r\n    email.includes(\"mobola\")\r\n      ? setIsAdmin(true)\r\n      : setIsAdmin(false);\r\n  };\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    if (email === \"\" || password === \"\" || password !== confirmPassword) {\r\n      alert(\"Input valid credentials\");\r\n      resetInput();\r\n    } else {\r\n      setLoading(true);\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          firebase.auth().currentUser.updateProfile({ displayName: username });\r\n          setUsername(username);\r\n        })\r\n        .then(() => {\r\n          addUser({ email: email, value: username, label: username, id: email, isAdmin });\r\n          // console.log(username);\r\n        })\r\n        .then(() => {\r\n          setAuthScreen();\r\n          setLoading(false);\r\n          resetInput();\r\n          // window.location.pathname = \"/\";\r\n        })\r\n        .catch((err) => {\r\n          // console.error(err);\r\n          alert(err.message);\r\n          setLoading(false);\r\n        });\r\n    }\r\n    // setLoading(false);\r\n  };\r\n\r\n  const resetInput = () => {\r\n    setUsername(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n  };\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n\r\n  useEffect(() => {\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    admin()\r\n  }, [email, isAdmin]);\r\n\r\n  return (\r\n    <div className=\"Register\">\r\n      <div className=\"logo\">\r\n        <img src=\"/logo.png\" alt=\"Loosemedia logo\" />\r\n      </div>\r\n      <div className=\"Box\">\r\n        <div className=\"wrap\">\r\n          <div className=\"h4\">\r\n            <h4>Register</h4>\r\n          </div>\r\n          <form>\r\n            <div className=\"Input\">\r\n              <input\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                placeholder=\"Name\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"Input\">\r\n              <input\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n              />\r\n            </div>\r\n            <div className=\"Input password\">\r\n              <input\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Password\"\r\n                type={passwordShown ? \"text\" : \"password\"}\r\n              />\r\n              <i\r\n                className=\"fa fa-eye\"\r\n                aria-hidden=\"true\"\r\n                onClick={togglePasswordVisiblity}\r\n              ></i>\r\n            </div>\r\n            <div className=\"Input password\">\r\n              <input\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                placeholder=\"Confirm Password\"\r\n                type={passwordShown ? \"text\" : \"password\"}\r\n              />\r\n              <i\r\n                className=\"fa fa-eye\"\r\n                aria-hidden=\"true\"\r\n                onClick={togglePasswordVisiblity}\r\n              ></i>\r\n            </div>\r\n          </form>\r\n          {loading ? (\r\n            <center>\r\n              <LoadingIndicator\r\n                className=\"loader\"\r\n                type=\"Circles\"\r\n                height={30}\r\n                width={30}\r\n              />\r\n            </center>\r\n          ) : (\r\n            <div className=\"Btn\">\r\n              <button onClick={register} type=\"submit\">\r\n                REGISTER\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"foot\">\r\n        <p onClick={() => setIsRegister(false)}>Already have an account?</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from 'react'\r\nimport \"./auth.css\";\r\nimport Login from './Login';\r\nimport Register from './Register';\r\n\r\nexport const SetIsRegister = React.createContext()\r\n\r\n\r\nfunction Auth() {\r\n  const [isRegister, setIsRegister] = useState(true);\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [isRegister])\r\n\r\n  return (\r\n    <div className=\"Auth\">\r\n          <img src=\"/bg.png\" className=\"bg\" alt=\"Background\"/>\r\n        <SetIsRegister.Provider value={setIsRegister}>\r\n          {\r\n            isRegister ? <Login /> : <Register />\r\n          }\r\n    </SetIsRegister.Provider>\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Auth\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../App\";\r\nimport \"./nav.css\";\r\n\r\nfunction Nav({ name, path }) {\r\n  const { handleLogout } = useContext(AuthContext);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  return (\r\n    <div className=\"Nav\">\r\n      <div className=\"left\">\r\n        <img className=\"logo\" src=\"/logo.png\" alt=\"Background\" />\r\n        <h3>{name}</h3>\r\n      </div>\r\n      <div className=\"right\">\r\n        <Link to={path}>\r\n          <img className=\"add\" src=\"/add.png\" alt=\"add\" />\r\n        </Link>\r\n        <div\r\n          onClick={handleLogout}\r\n          onMouseOver={() => setShowDropdown(true)}\r\n          onMouseLeave={() => setShowDropdown(false)}\r\n        >\r\n          <img className=\"logout\" src=\"/logout.png\" alt=\"logout\" />\r\n          {showDropdown ? (\r\n            <div class=\"dropdown\">\r\n              <p>Logout</p>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport firebase from \"../../lib/firebase\";\r\nimport Select from \"react-select\";\r\nimport { AuthContext } from \"../../App\";\r\nimport Nav from \"../Nav\";\r\nimport \"./admin.css\";\r\nimport LoadingIndicator from \"../LoadingIndicator\";\r\n\r\nfunction AddAccount() {\r\n  const { handleAddAccount, loading, currentUser, isAdmin } =\r\n    useContext(AuthContext);\r\n  const [accountName, setAccountName] = useState(\"\");\r\n  const [manager, setManager] = useState(\"\");\r\n  const [platform, setPlatform] = useState(\"\");\r\n  const [managers, setManagers] = useState(\"\");\r\n  const [platformFb, setPlatformFb] = useState(false);\r\n  const [platformTw, setPlatformTw] = useState(false);\r\n  const [platformIg, setPlatformIg] = useState(false);\r\n  const [platformLn, setPlatformLn] = useState(false);\r\n  const [likesFb, setLikesFb] = useState(0);\r\n  const [likesTw, setLikesTw] = useState(0);\r\n  const [likesIg, setLikesIg] = useState(0);\r\n  const [likesLn, setLikesLn] = useState(0);\r\n  const [commentsFb, setCommentsFb] = useState(0);\r\n  const [commentsTw, setCommentsTw] = useState(0);\r\n  const [commentsIg, setCommentsIg] = useState(0);\r\n  const [commentsLn, setCommentsLn] = useState(0);\r\n  const [sharesFb, setSharesFb] = useState(0);\r\n  const [sharesTw, setSharesTw] = useState(0);\r\n  const [sharesIg, setSharesIg] = useState(0);\r\n  const [sharesLn, setSharesLn] = useState(0);\r\n  const [leadsFb, setLeadsFb] = useState(0);\r\n  const [leadsTw, setLeadsTw] = useState(0);\r\n  const [leadsIg, setLeadsIg] = useState(0);\r\n  const [leadsLn, setLeadsLn] = useState(0);\r\n  const [saves, setSaves] = useState(0);\r\n  const [impressionsFb, setImpressionsFb] = useState(0);\r\n  const [impressionsTw, setImpressionsTw] = useState(0);\r\n  const [impressionsIg, setImpressionsIg] = useState(0);\r\n  const [impressionsLn, setImpressionsLn] = useState(0);\r\n  const [viewsFb, setViewsFb] = useState(0);\r\n  const [viewsTw, setViewsTw] = useState(0);\r\n  const [viewsIg, setViewsIg] = useState(0);\r\n  const [viewsLn, setViewsLn] = useState(0);\r\n  const [downloadsFb, setDownloadsFb] = useState(0);\r\n  const [downloadsTw, setDownloadsTw] = useState(0);\r\n  const [downloadsIg, setDownloadsIg] = useState(0);\r\n  const [downloadsLn, setDownloadsLn] = useState(0);\r\n  const [followersFb, setFollowersFb] = useState(0);\r\n  const [followersTw, setFollowersTw] = useState(0);\r\n  const [followersIg, setFollowersIg] = useState(0);\r\n  const [followersLn, setFollowersLn] = useState(0);\r\n  const [reachFb, setReachFb] = useState(0);\r\n  const [reachTw, setReachTw] = useState(0);\r\n  const [reachIg, setReachIg] = useState(0);\r\n  const [reachLn, setReachLn] = useState(0);\r\n  const [formCount, setFormCount] = useState(0);\r\n  const [pushForm, setPushForm] = useState([formCount]);\r\n  const [platformList, setPlatformList] = useState([]);\r\n  // const [likes, setLikes] = useState(0);\r\n  // const [comments, setComments] = useState(0);\r\n  // const [shares, setShares] = useState(0);\r\n  // const [saves, setSaves] = useState(0);\r\n  // const [leads, setLeads] = useState(0);\r\n  // const [impressions, setImpressions] = useState(0);\r\n  // const [views, setViews] = useState(0);\r\n  // const [downloads, setDownloads] = useState(0);\r\n  // const [followers, setFollowers] = useState(0);\r\n  // const [reach, setReach] = useState(0);\r\n\r\n  const getManagers = firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .where(\"isAdmin\", \"==\", false)\r\n    .onSnapshot((querySnapshot) => {\r\n      const items = [];\r\n      querySnapshot.forEach((doc) => {\r\n        items.push(doc.data());\r\n      });\r\n      setManagers(items);\r\n    });\r\n\r\n  const platforms = [\r\n    { value: \"facebook\", label: \"facebook\" },\r\n    { value: \"twitter\", label: \"twitter\" },\r\n    { value: \"instagram\", label: \"instagram\" },\r\n    { value: \"linkedin\", label: \"linkedin\" },\r\n  ];\r\n\r\n  var date = new Date();\r\n  // today =\r\n  //   date.getFullYear() +\r\n  //   \"-\" +\r\n  //   (date.getMonth() + 1) +\r\n  //   \"-\" +\r\n  //   date.getDate() +\r\n  //   accountName;\r\n  var day =\r\n    date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\r\n\r\n  const handleBtnClick = () => {\r\n    if (platform !== \"\" && accountName !== \"\") {\r\n      handleAddAccount({\r\n        id: `${accountName}-${manager.value}`,\r\n        label: accountName,\r\n        manager: manager.value,\r\n        date: day,\r\n        platformList,\r\n        facebook: {\r\n          likes: parseInt(likesFb),\r\n          comments: parseInt(commentsFb),\r\n          reach: parseInt(reachFb),\r\n          shares: parseInt(sharesFb),\r\n          leads: parseInt(leadsFb),\r\n          views: parseInt(viewsFb),\r\n          impressions: parseInt(impressionsFb),\r\n          followers: parseInt(followersFb),\r\n          downloads: parseInt(downloadsFb),\r\n        },\r\n        twitter: {\r\n          likes: parseInt(likesTw),\r\n          comments: parseInt(commentsTw),\r\n          reach: parseInt(reachTw),\r\n          shares: parseInt(sharesTw),\r\n          leads: parseInt(leadsTw),\r\n          views: parseInt(viewsTw),\r\n          impressions: parseInt(impressionsTw),\r\n          followers: parseInt(followersTw),\r\n          downloads: parseInt(downloadsTw),\r\n        },\r\n        instagram: {\r\n          likes: parseInt(likesIg),\r\n          comments: parseInt(commentsIg),\r\n          reach: parseInt(reachIg),\r\n          shares: parseInt(sharesIg),\r\n          saves: parseInt(saves),\r\n          leads: parseInt(leadsIg),\r\n          views: parseInt(viewsIg),\r\n          impressions: parseInt(impressionsIg),\r\n          followers: parseInt(followersIg),\r\n          downloads: parseInt(downloadsIg),\r\n        },\r\n        linkedin: {\r\n          likes: parseInt(likesLn),\r\n          comments: parseInt(commentsLn),\r\n          reach: parseInt(reachLn),\r\n          shares: parseInt(sharesLn),\r\n          leads: parseInt(leadsLn),\r\n          views: parseInt(viewsLn),\r\n          impressions: parseInt(impressionsLn),\r\n          followers: parseInt(followersLn),\r\n          downloads: parseInt(downloadsLn),\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const addForm = () => {\r\n    setFormCount(formCount + 1);\r\n    setPushForm([...pushForm, formCount]);\r\n    setPlatformList([...platformList, platform.value])\r\n  };\r\n\r\n  useEffect(() => console.log(platformList), [platformList]);\r\n\r\n  useEffect(() => {}, [pushForm]);\r\n\r\n  useEffect(() => {\r\n    // console.log(platform.value);\r\n  }, [platform]);\r\n\r\n  useEffect(() => {\r\n    getManagers()\r\n  }, [])\r\n\r\n  const showFacebook = (\r\n    <div className=\"input\">\r\n      <input\r\n        onChange={(e) => setLikesFb(e.target.value)}\r\n        placeholder=\"Likes\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setCommentsFb(e.target.value)}\r\n        placeholder=\"Comments\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setSharesFb(e.target.value)}\r\n        placeholder=\"Shares\"\r\n        type=\"number\"\r\n        required\r\n      />\r\n      <input\r\n        onChange={(e) => setLeadsFb(e.target.value)}\r\n        placeholder=\"Leads\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setViewsFb(e.target.value)}\r\n        placeholder=\"Views\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setReachFb(e.target.value)}\r\n        placeholder=\"Reach\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setImpressionsFb(e.target.value)}\r\n        placeholder=\"Impressions\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setDownloadsFb(e.target.value)}\r\n        placeholder=\"Downloads\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setFollowersFb(e.target.value)}\r\n        placeholder=\"Followers\"\r\n        type=\"number\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const showTwitter = (\r\n    <div className=\"input\">\r\n      <input\r\n        onChange={(e) => setLikesTw(e.target.value)}\r\n        placeholder=\"Likes\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setCommentsTw(e.target.value)}\r\n        placeholder=\"Comments\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setSharesTw(e.target.value)}\r\n        placeholder=\"Retweets\"\r\n        type=\"number\"\r\n        required\r\n      />\r\n      <input\r\n        onChange={(e) => setLeadsTw(e.target.value)}\r\n        placeholder=\"Leads\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setViewsTw(e.target.value)}\r\n        placeholder=\"Views\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setReachTw(e.target.value)}\r\n        placeholder=\"Reach\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setImpressionsTw(e.target.value)}\r\n        placeholder=\"Impressions\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setDownloadsTw(e.target.value)}\r\n        placeholder=\"Downloads\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setFollowersTw(e.target.value)}\r\n        placeholder=\"Followers\"\r\n        type=\"number\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const showInstagram = (\r\n    <div className=\"input\">\r\n      <input\r\n        onChange={(e) => setLikesIg(e.target.value)}\r\n        placeholder=\"Likes\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setCommentsIg(e.target.value)}\r\n        placeholder=\"Comments\"\r\n        type=\"number\"\r\n      />\r\n      \r\n      <input\r\n        onChange={(e) => setSharesIg(e.target.value)}\r\n        placeholder=\"Shares\"\r\n        type=\"number\"\r\n        required\r\n      />\r\n      <input\r\n        onChange={(e) => setLeadsIg(e.target.value)}\r\n        placeholder=\"Leads\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setViewsIg(e.target.value)}\r\n        placeholder=\"Views\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setReachIg(e.target.value)}\r\n        placeholder=\"Reach\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setImpressionsIg(e.target.value)}\r\n        placeholder=\"Impressions\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setDownloadsIg(e.target.value)}\r\n        placeholder=\"Downloads\"\r\n        type=\"number\"\r\n      />\r\n      \r\n      <input\r\n        onChange={(e) => setFollowersIg(e.target.value)}\r\n        placeholder=\"Followers\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setSaves(e.target.value)}\r\n        placeholder=\"Saves\"\r\n        type=\"number\"\r\n        required\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const showLinkedin = (\r\n    <div className=\"input\">\r\n      <input\r\n        onChange={(e) => setLikesLn(e.target.value)}\r\n        placeholder=\"Likes\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setCommentsLn(e.target.value)}\r\n        placeholder=\"Comments\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setSharesLn(e.target.value)}\r\n        placeholder=\"Shares\"\r\n        type=\"number\"\r\n        required\r\n      />\r\n      <input\r\n        onChange={(e) => setLeadsLn(e.target.value)}\r\n        placeholder=\"Leads\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setViewsLn(e.target.value)}\r\n        placeholder=\"Views\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setReachLn(e.target.value)}\r\n        placeholder=\"Reach\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setImpressionsLn(e.target.value)}\r\n        placeholder=\"Impressions\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setDownloadsLn(e.target.value)}\r\n        placeholder=\"Downloads\"\r\n        type=\"number\"\r\n      />\r\n      \r\n      <input\r\n        onChange={(e) => setFollowersLn(e.target.value)}\r\n        placeholder=\"Followers\"\r\n        type=\"number\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const handlePlatformChange = (e) => {\r\n    switch (e.value) {\r\n      case \"facebook\":\r\n        setPlatformFb(true);\r\n        setPlatformTw(false);\r\n        setPlatformIg(false);\r\n        setPlatformLn(false);\r\n        break;\r\n      case \"twitter\":\r\n        setPlatformTw(true);\r\n        setPlatformFb(false);\r\n        setPlatformIg(false);\r\n        setPlatformLn(false);\r\n        break;\r\n      case \"instagram\":\r\n        setPlatformIg(true);\r\n        setPlatformTw(false);\r\n        setPlatformFb(false);\r\n        setPlatformLn(false);\r\n        break;\r\n      case \"linkedin\":\r\n        setPlatformLn(true);\r\n        setPlatformIg(false);\r\n        setPlatformTw(false);\r\n        setPlatformFb(false);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    setPlatform(e);\r\n  };\r\n\r\n\r\n\r\n  const showForm = (\r\n    <>\r\n      <form>\r\n        <div className=\"select\">\r\n          <Select\r\n            className=\"Select\"\r\n            placeholder=\"Platform\"\r\n            // value={platform}\r\n            onChange={(e) => {\r\n              handlePlatformChange(e);\r\n            }}\r\n            options={platforms}\r\n          />\r\n        </div>\r\n        {platformFb ? (\r\n          showFacebook\r\n        ) : platformTw ? (\r\n          showTwitter\r\n        ) : platformIg ? (\r\n          showInstagram\r\n        ) : platformLn ? (\r\n          showLinkedin\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n\r\n        <hr />\r\n      </form>\r\n    </>\r\n  );\r\n\r\n  if (!currentUser || currentUser.email === null) {\r\n    return (\r\n      <div>\r\n        <center>\r\n          <LoadingIndicator type=\"Circles\" height={100} width={100} />\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Cover\">\r\n      <Nav />\r\n      {isAdmin ? (\r\n        <div className=\"AddAccount\">\r\n          {/* <div className=\"head displayName\">\r\n            <h3>Welcome, {currentUser.displayName}</h3>\r\n          </div> */}\r\n          <div className=\"wrap\">\r\n            <div className=\"head\">\r\n              <h3>New Account</h3>\r\n            </div>\r\n            <div className=\"Input\">\r\n              <input\r\n                onChange={(e) => setAccountName(e.target.value)}\r\n                placeholder=\"Account name\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"select\">\r\n              <Select\r\n                className=\"Select\"\r\n                placeholder=\"Community manager\"\r\n                value={manager}\r\n                onChange={setManager}\r\n                options={managers}\r\n              />\r\n            </div>\r\n            {pushForm.map((item, i) => (\r\n              <div key={i}>{showForm}</div>\r\n            ))}\r\n            {loading ? (\r\n              <center>\r\n                <LoadingIndicator\r\n                  className=\"loader\"\r\n                  type=\"Circles\"\r\n                  height={30}\r\n                  width={30}\r\n                />\r\n              </center>\r\n            ) : (\r\n              <div className=\"Buttons\">\r\n                <div className=\"Btn\">\r\n                  <button\r\n                    onClick={handleBtnClick}\r\n                    className=\"btn\"\r\n                    type=\"submit\"\r\n                  >\r\n                    SUBMIT\r\n                  </button>\r\n                </div>\r\n                <div className=\"Btn addMore\">\r\n                  <button onClick={addForm} className=\"btn\" type=\"submit\">\r\n                    ADD MORE\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <center>\r\n            <h2>Please you're not an Admin</h2>\r\n          </center>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddAccount;\r\n\r\n\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { AuthContext } from \"../../App\";\r\nimport Nav from \"../Nav\";\r\nimport \"./user.css\";\r\nimport LoadingIndicator from \"../LoadingIndicator\";\r\n\r\nfunction AddReport() {\r\n  const {\r\n    currentUser,\r\n    loading,\r\n    managerAccounts,\r\n    addToFacebook,\r\n    addToInstagram,\r\n    addToLinkedin,\r\n    addToTwitter,\r\n    isAdmin,\r\n  } = useContext(AuthContext);\r\n  const [accountName, setAccountName] = useState(\"\");\r\n  const [platform, setPlatform] = useState(\"\");\r\n  const [platformFb, setPlatformFb] = useState(false);\r\n  const [platformTw, setPlatformTw] = useState(false);\r\n  const [platformIg, setPlatformIg] = useState(false);\r\n  const [platformLn, setPlatformLn] = useState(false);\r\n  const [reportDate, setReportDate] = useState(false);\r\n  const [likesFb, setLikesFb] = useState(0);\r\n  const [likesTw, setLikesTw] = useState(0);\r\n  const [likesIg, setLikesIg] = useState(0);\r\n  const [likesLn, setLikesLn] = useState(0);\r\n  const [commentsFb, setCommentsFb] = useState(0);\r\n  const [commentsTw, setCommentsTw] = useState(0);\r\n  const [commentsIg, setCommentsIg] = useState(0);\r\n  const [commentsLn, setCommentsLn] = useState(0);\r\n  const [sharesFb, setSharesFb] = useState(0);\r\n  const [sharesTw, setSharesTw] = useState(0);\r\n  const [sharesIg, setSharesIg] = useState(0);\r\n  const [sharesLn, setSharesLn] = useState(0);\r\n  const [leadsFb, setLeadsFb] = useState(0);\r\n  const [leadsTw, setLeadsTw] = useState(0);\r\n  const [leadsIg, setLeadsIg] = useState(0);\r\n  const [leadsLn, setLeadsLn] = useState(0);\r\n  const [saves, setSaves] = useState(0);\r\n  const [impressionsFb, setImpressionsFb] = useState(0);\r\n  const [impressionsTw, setImpressionsTw] = useState(0);\r\n  const [impressionsIg, setImpressionsIg] = useState(0);\r\n  const [impressionsLn, setImpressionsLn] = useState(0);\r\n  const [viewsFb, setViewsFb] = useState(0);\r\n  const [viewsTw, setViewsTw] = useState(0);\r\n  const [viewsIg, setViewsIg] = useState(0);\r\n  const [viewsLn, setViewsLn] = useState(0);\r\n  const [downloadsFb, setDownloadsFb] = useState(0);\r\n  const [downloadsTw, setDownloadsTw] = useState(0);\r\n  const [downloadsIg, setDownloadsIg] = useState(0);\r\n  const [downloadsLn, setDownloadsLn] = useState(0);\r\n  const [followersFb, setFollowersFb] = useState(0);\r\n  const [followersTw, setFollowersTw] = useState(0);\r\n  const [followersIg, setFollowersIg] = useState(0);\r\n  const [followersLn, setFollowersLn] = useState(0);\r\n  const [reachFb, setReachFb] = useState(0);\r\n  const [reachTw, setReachTw] = useState(0);\r\n  const [reachIg, setReachIg] = useState(0);\r\n  const [reachLn, setReachLn] = useState(0);\r\n  const [formCount, setFormCount] = useState(0);\r\n  const [postNoFb, setPostNoFb] = useState(0);\r\n  const [postNoTw, setPostNoTw] = useState(0);\r\n  const [postNoIg, setPostNoIg] = useState(0);\r\n  const [postNoLn, setPostNoLn] = useState(0);\r\n  const [pushForm, setPushForm] = useState([formCount]);\r\n\r\n  const platforms = [\r\n    { value: \"facebook\", label: \"facebook\" },\r\n    { value: \"twitter\", label: \"twitter\" },\r\n    { value: \"instagram\", label: \"instagram\" },\r\n    { value: \"linkedin\", label: \"linkedin\" },\r\n  ];\r\n\r\n  var date = new Date(),\r\n    today =\r\n      date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\r\n\r\n  const handleBtnClick = async () => {\r\n    if (platform !== \"\" && platform.value !== \"\" && accountName !== \"\") {\r\n      await addToFacebook(`${accountName.label}-${currentUser.displayName}`, {\r\n        id: reportDate !== \"\" ? reportDate : today,\r\n        likes: parseInt(likesFb),\r\n        comments: parseInt(commentsFb),\r\n        reach: parseInt(reachFb),\r\n        shares: parseInt(sharesFb),\r\n        leads: parseInt(leadsFb),\r\n        views: parseInt(viewsFb),\r\n        impressions: parseInt(impressionsFb),\r\n        followers: parseInt(followersFb),\r\n        downloads: parseInt(downloadsFb),\r\n        posts: postNoFb,\r\n      });\r\n      await addToTwitter(`${accountName.label}-${currentUser.displayName}`, {\r\n        id: reportDate !== \"\" ? reportDate : today,\r\n        likes: parseInt(likesTw),\r\n        comments: parseInt(commentsTw),\r\n        reach: parseInt(reachTw),\r\n        shares: parseInt(sharesTw),\r\n        leads: parseInt(leadsTw),\r\n        views: parseInt(viewsTw),\r\n        impressions: parseInt(impressionsTw),\r\n        followers: parseInt(followersTw),\r\n        downloads: parseInt(downloadsTw),\r\n        posts: postNoTw,\r\n      });\r\n      await addToInstagram(`${accountName.label}-${currentUser.displayName}`, {\r\n        id: reportDate !== \"\" ? reportDate : today,\r\n        likes: parseInt(likesIg),\r\n        comments: parseInt(commentsIg),\r\n        saves: parseInt(saves),\r\n        reach: parseInt(reachIg),\r\n        shares: parseInt(sharesIg),\r\n        leads: parseInt(leadsIg),\r\n        views: parseInt(viewsIg),\r\n        impressions: parseInt(impressionsIg),\r\n        followers: parseInt(followersIg),\r\n        downloads: parseInt(downloadsIg),\r\n        posts: postNoIg,\r\n      });\r\n      await addToLinkedin(`${accountName.label}-${currentUser.displayName}`, {\r\n        id: reportDate !== \"\" ? reportDate : today,\r\n        likes: parseInt(likesLn),\r\n        comments: parseInt(commentsLn),\r\n        reach: parseInt(reachLn),\r\n        shares: parseInt(sharesLn),\r\n        leads: parseInt(leadsLn),\r\n        views: parseInt(viewsLn),\r\n        impressions: parseInt(impressionsLn),\r\n        followers: parseInt(followersLn),\r\n        downloads: parseInt(downloadsLn),\r\n        posts: postNoLn,\r\n      });\r\n    } else {\r\n      alert(\"Check the account and/or platform\");\r\n    }\r\n  };\r\n\r\n  const addForm = () => {\r\n    setFormCount(formCount + 1);\r\n    setPushForm([...pushForm, formCount]);\r\n    // console.log(pushForm);\r\n  };\r\n\r\n  useEffect(() => {}, [pushForm]);\r\n\r\n  useEffect(() => {\r\n    // console.log(platform.value);\r\n  }, [platform]);\r\n\r\n  const showFacebook = (\r\n    <>\r\n      <div className=\"posts\">\r\n        <input\r\n          onChange={(e) => setPostNoFb(e.target.value)}\r\n          placeholder=\"Number of posts\"\r\n          type=\"number\"\r\n        />\r\n      </div>\r\n    <div className=\"input\">\r\n      <input\r\n        onChange={(e) => setLikesFb(e.target.value)}\r\n        placeholder=\"Likes\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setCommentsFb(e.target.value)}\r\n        placeholder=\"Comments\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setSharesFb(e.target.value)}\r\n        placeholder=\"Shares\"\r\n        type=\"number\"\r\n        required\r\n      />\r\n      <input\r\n        onChange={(e) => setLeadsFb(e.target.value)}\r\n        placeholder=\"Leads\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setViewsFb(e.target.value)}\r\n        placeholder=\"Views\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setReachFb(e.target.value)}\r\n        placeholder=\"Reach\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setImpressionsFb(e.target.value)}\r\n        placeholder=\"Impressions\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setDownloadsFb(e.target.value)}\r\n        placeholder=\"Downloads\"\r\n        type=\"number\"\r\n      />\r\n      <input\r\n        onChange={(e) => setFollowersFb(e.target.value)}\r\n        placeholder=\"Followers\"\r\n        type=\"number\"\r\n      />\r\n    </div>\r\n    </>\r\n  );\r\n\r\n  const showTwitter = (\r\n    <>\r\n      <div className=\"posts\">\r\n        <input\r\n          onChange={(e) => setPostNoTw(e.target.value)}\r\n          placeholder=\"Number of posts\"\r\n          type=\"number\"\r\n        />\r\n      </div>\r\n      <div className=\"input\">\r\n        <input\r\n          onChange={(e) => setLikesTw(e.target.value)}\r\n          placeholder=\"Likes\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setCommentsTw(e.target.value)}\r\n          placeholder=\"Comments\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setSharesTw(e.target.value)}\r\n          placeholder=\"Retweets\"\r\n          type=\"number\"\r\n          required\r\n        />\r\n        <input\r\n          onChange={(e) => setLeadsTw(e.target.value)}\r\n          placeholder=\"Leads\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setViewsTw(e.target.value)}\r\n          placeholder=\"Views\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setReachTw(e.target.value)}\r\n          placeholder=\"Reach\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setImpressionsTw(e.target.value)}\r\n          placeholder=\"Impressions\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setDownloadsTw(e.target.value)}\r\n          placeholder=\"Downloads\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setFollowersTw(e.target.value)}\r\n          placeholder=\"Followers\"\r\n          type=\"number\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  const showInstagram = (\r\n    <>\r\n      <div className=\"posts\">\r\n        <input\r\n          onChange={(e) => setPostNoIg(e.target.value)}\r\n          placeholder=\"Number of posts\"\r\n          type=\"number\"\r\n        />\r\n      </div>\r\n      <div className=\"input\">\r\n        <input\r\n          onChange={(e) => setLikesIg(e.target.value)}\r\n          placeholder=\"Likes\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setCommentsIg(e.target.value)}\r\n          placeholder=\"Comments\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setSaves(e.target.value)}\r\n          placeholder=\"Saves\"\r\n          type=\"number\"\r\n          required\r\n        />\r\n        <input\r\n          onChange={(e) => setSharesIg(e.target.value)}\r\n          placeholder=\"Shares\"\r\n          type=\"number\"\r\n          required\r\n        />\r\n        <input\r\n          onChange={(e) => setLeadsIg(e.target.value)}\r\n          placeholder=\"Leads\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setImpressionsIg(e.target.value)}\r\n          placeholder=\"Impressions\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setReachIg(e.target.value)}\r\n          placeholder=\"Reach\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setDownloadsIg(e.target.value)}\r\n          placeholder=\"Downloads\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setViewsIg(e.target.value)}\r\n          placeholder=\"Views\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setFollowersIg(e.target.value)}\r\n          placeholder=\"Followers\"\r\n          type=\"number\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  const showLinkedin = (\r\n    <>\r\n      <div className=\"posts\">\r\n        <input\r\n          onChange={(e) => setPostNoLn(e.target.value)}\r\n          placeholder=\"Number of posts\"\r\n          type=\"number\"\r\n        />\r\n      </div>\r\n      <div className=\"input\">\r\n        <input\r\n          onChange={(e) => setLikesLn(e.target.value)}\r\n          placeholder=\"Likes\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setCommentsLn(e.target.value)}\r\n          placeholder=\"Comments\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setSharesLn(e.target.value)}\r\n          placeholder=\"Shares\"\r\n          type=\"number\"\r\n          required\r\n        />\r\n        <input\r\n          onChange={(e) => setLeadsLn(e.target.value)}\r\n          placeholder=\"Leads\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setImpressionsLn(e.target.value)}\r\n          placeholder=\"Impressions\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setReachLn(e.target.value)}\r\n          placeholder=\"Reach\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setDownloadsLn(e.target.value)}\r\n          placeholder=\"Downloads\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setViewsLn(e.target.value)}\r\n          placeholder=\"Views\"\r\n          type=\"number\"\r\n        />\r\n        <input\r\n          onChange={(e) => setFollowersLn(e.target.value)}\r\n          placeholder=\"Followers\"\r\n          type=\"number\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  const handlePlatformChange = (e) => {\r\n    setPlatform(e);\r\n    switch (e.value) {\r\n      case \"facebook\":\r\n        setPlatformFb(true);\r\n        setPlatformTw(false);\r\n        setPlatformIg(false);\r\n        setPlatformLn(false);\r\n        break;\r\n      case \"twitter\":\r\n        setPlatformTw(true);\r\n        setPlatformFb(false);\r\n        setPlatformIg(false);\r\n        setPlatformLn(false);\r\n        break;\r\n      case \"instagram\":\r\n        setPlatformIg(true);\r\n        setPlatformTw(false);\r\n        setPlatformFb(false);\r\n        setPlatformLn(false);\r\n        break;\r\n      case \"linkedin\":\r\n        setPlatformLn(true);\r\n        setPlatformIg(false);\r\n        setPlatformTw(false);\r\n        setPlatformFb(false);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const showForm = (\r\n    <form>\r\n      <div className=\"select\">\r\n        <Select\r\n          className=\"Select\"\r\n          placeholder=\"Platform\"\r\n          // value={platform}\r\n          onChange={(e) => {\r\n            handlePlatformChange(e);\r\n          }}\r\n          options={platforms}\r\n        />\r\n      </div>\r\n      {platformFb ? (\r\n        showFacebook\r\n      ) : platformTw ? (\r\n        showTwitter\r\n      ) : platformIg ? (\r\n        showInstagram\r\n      ) : platformLn ? (\r\n        showLinkedin\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n\r\n      <hr />\r\n    </form>\r\n  );\r\n\r\n  if (!currentUser || currentUser.email === null) {\r\n    return (\r\n      <div>\r\n        <center>\r\n          <LoadingIndicator type=\"Circles\" height={100} width={100} />\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"Cover\">\r\n      <Nav />\r\n      {!isAdmin ? (\r\n        <div className=\"AddReport\">\r\n          <div className=\"wrap\">\r\n            <div className=\"head\">\r\n              <h3>New Report</h3>\r\n            </div>\r\n            <div className=\"select\">\r\n              <Select\r\n                className=\"Select\"\r\n                placeholder=\"Account\"\r\n                value={accountName}\r\n                onChange={setAccountName}\r\n                options={managerAccounts}\r\n              />\r\n            </div>\r\n            <div className=\"date\">\r\n              <input\r\n                onChange={(e) => setReportDate(e.target.value)}\r\n                placeholder=\"Date\"\r\n                type=\"date\"\r\n              />\r\n            </div>\r\n            {pushForm.map((item, i) => (\r\n              <div key={i}>{showForm}</div>\r\n            ))}\r\n            {loading ? (\r\n              <center>\r\n                <LoadingIndicator\r\n                  className=\"loader\"\r\n                  type=\"Circles\"\r\n                  height={30}\r\n                  width={30}\r\n                />\r\n              </center>\r\n            ) : (\r\n              <div className=\"Buttons\">\r\n                <div className=\"Btn\">\r\n                  <button\r\n                    onClick={handleBtnClick}\r\n                    className=\"btn\"\r\n                    type=\"submit\"\r\n                  >\r\n                    SUBMIT\r\n                  </button>\r\n                </div>\r\n                <div className=\"Btn addMore\">\r\n                  <button onClick={addForm} className=\"btn\" type=\"submit\">\r\n                    ADD MORE\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <center>\r\n            <h2>Please you're not a community manager for any account</h2>\r\n          </center>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddReport;\r\n","import React from 'react'\r\nimport './popup.css'\r\n\r\nfunction Popup(props) {\r\n    \r\n    return (\r\n        <div className=\"popup-box\" onMouseUp={props.handleClose}>\r\n        <div className=\"box\">\r\n          {/* <span className=\"close-icon\" onClick={props.handleClose}>x</span> */}\r\n          {props.content}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Popup\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport firebase from \"../../lib/firebase\";\r\nimport { AuthContext } from \"../../App\";\r\nimport Popup from \"../Admin/Popup\";\r\nimport \"../Admin/admin.css\";\r\nimport Nav from \"../Nav\";\r\nimport LoadingIndicator from \"../LoadingIndicator\";\r\n\r\nfunction ManagerAnalytics() {\r\n  const { currentUser, isAdmin } = useContext(AuthContext);\r\n  const accountsRef = firebase.firestore().collection(\"account\");\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [accFacebook, setAccFacebook] = useState();\r\n  const [accTwitter, setAccTwitter] = useState();\r\n  const [accInstagram, setAccInstagram] = useState();\r\n  const [accLinkedin, setAccLinkedin] = useState();\r\n  const [metric, setMetric] = useState(\"\");\r\n  const [totalMetricFacebook, setTotalMetricFacebook] = useState({});\r\n  const [numberFacebook, setNumberFacebook] = useState({});\r\n  const [itemTotalFacebook, setItemTotalFacebook] = useState({});\r\n  const [totalMetricTwitter, setTotalMetricTwitter] = useState({});\r\n  const [numberTwitter, setNumberTwitter] = useState({});\r\n  const [itemTotalTwitter, setItemTotalTwitter] = useState({});\r\n  const [totalMetricInstagram, setTotalMetricInstagram] = useState({});\r\n  const [numberInstagram, setNumberInstagram] = useState({});\r\n  const [itemTotalInstagram, setItemTotalInstagram] = useState({});\r\n  const [totalMetricLinkedin, setTotalMetricLinkedin] = useState({});\r\n  const [numberLinkedin, setNumberLinkedin] = useState({});\r\n  const [itemTotalLinkedin, setItemTotalLinkedin] = useState({});\r\n  const [error, setError] = useState();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const viewFacebook = async (account) => {\r\n    // ===============set the assigned target metrics===============\r\n    var itemTotal;\r\n    accountsRef\r\n      .doc(`${account.label}-${currentUser.displayName}`)\r\n      .onSnapshot((querySnapshot) => {\r\n        itemTotal = querySnapshot.data().facebook;\r\n        setItemTotalFacebook(itemTotal);\r\n        // console.log(itemTotal);\r\n      });\r\n    var finalAns;\r\n    const items = [];\r\n    accounts.length > 0\r\n      ? accountsRef\r\n          .doc(`${account.label}-${currentUser.displayName}`)\r\n          .collection(\"facebook\")\r\n          .get()\r\n          .then((response) => {\r\n            // ===============get the subcollection metric===============\r\n            response.forEach((document) => {\r\n              const fetchedItem = {\r\n                id: document.id,\r\n                ...document.data(),\r\n              };\r\n              items.push(fetchedItem);\r\n            });\r\n            // console.log(items);\r\n            // ===============add up each metric report===============\r\n            var likes,\r\n              comments,\r\n              reach,\r\n              shares,\r\n              leads,\r\n              impressions,\r\n              downloads,\r\n              views,\r\n              followers;\r\n            likes =\r\n              comments =\r\n              reach =\r\n              shares =\r\n              leads =\r\n              impressions =\r\n              downloads =\r\n              views =\r\n              followers =\r\n                0;\r\n            items.forEach((itemMetric) => {\r\n              likes += parseInt(itemMetric.likes);\r\n              comments += parseInt(itemMetric.comments);\r\n              reach += parseInt(itemMetric.reach);\r\n              shares += parseInt(itemMetric.shares);\r\n              leads += parseInt(itemMetric.leads);\r\n              impressions += parseInt(itemMetric.impressions);\r\n              downloads += parseInt(itemMetric.downloads);\r\n              views += parseInt(itemMetric.views);\r\n              followers += parseInt(itemMetric.followers);\r\n            });\r\n            setNumberFacebook({\r\n              likes,\r\n              comments,\r\n              reach,\r\n              shares,\r\n              leads,\r\n              impressions,\r\n              downloads,\r\n              views,\r\n              followers,\r\n            });\r\n            // ===============get the percentage met===============\r\n            finalAns = {\r\n              likes:\r\n                itemTotal.likes < 1\r\n                  ? 0\r\n                  : Math.round((likes / itemTotal.likes) * 100).toFixed(0),\r\n              // comments\r\n              comments:\r\n                itemTotal.comments < 1\r\n                  ? 0\r\n                  : Math.round((comments / itemTotal.comments) * 100).toFixed(\r\n                      0\r\n                    ),\r\n              // shares\r\n              shares:\r\n                itemTotal.shares < 1\r\n                  ? 0\r\n                  : Math.round((shares / itemTotal.shares) * 100).toFixed(0),\r\n              // reach\r\n              reach:\r\n                itemTotal.reach < 1\r\n                  ? 0\r\n                  : Math.round((reach / itemTotal.reach) * 100).toFixed(0),\r\n              // impressions\r\n              impressions:\r\n                itemTotal.impressions < 1\r\n                  ? 0\r\n                  : Math.round(\r\n                      (impressions / itemTotal.impressions) * 100\r\n                    ).toFixed(0),\r\n              // leads\r\n              leads:\r\n                itemTotal.leads < 1\r\n                  ? 0\r\n                  : Math.round((leads / itemTotal.leads) * 100).toFixed(0),\r\n              // views\r\n              views:\r\n                itemTotal.views < 1\r\n                  ? 0\r\n                  : Math.round((views / itemTotal.views) * 100).toFixed(0),\r\n              // downloads\r\n              downloads:\r\n                itemTotal.downloads < 1\r\n                  ? 0\r\n                  : Math.round((downloads / itemTotal.downloads) * 100).toFixed(\r\n                      0\r\n                    ),\r\n              // followers\r\n              followers:\r\n                itemTotal.followers < 1\r\n                  ? 0\r\n                  : Math.round((followers / itemTotal.followers) * 100).toFixed(\r\n                      0\r\n                    ),\r\n            };\r\n            // console.log(`${likes/parseInt(itemTotal.likes)} ${itemTotal.likes} likes and ${comments} comments`)\r\n            setTotalMetricFacebook(finalAns);\r\n          })\r\n          .catch((err) => {\r\n            setError(err);\r\n          })\r\n      : console.log(\"No accounts yet\");\r\n  };\r\n\r\n  const viewTwitter = async (account) => {\r\n    // ===============set the assigned target metrics===============\r\n    var itemTotal;\r\n    accountsRef\r\n      .doc(`${account.label}-${currentUser.displayName}`)\r\n      .onSnapshot((querySnapshot) => {\r\n        itemTotal = querySnapshot.data().twitter;\r\n        setItemTotalTwitter(itemTotal);\r\n        // console.log(itemTotal);\r\n      });\r\n    var finalAns;\r\n    const items = [];\r\n    accounts.length > 0\r\n      ? accountsRef\r\n          .doc(`${account.label}-${currentUser.displayName}`)\r\n          .collection(\"twitter\")\r\n          .get()\r\n          .then((response) => {\r\n            // ===============get the subcollection metric===============\r\n            response.forEach((document) => {\r\n              const fetchedItem = {\r\n                id: document.id,\r\n                ...document.data(),\r\n              };\r\n              items.push(fetchedItem);\r\n            });\r\n            // console.log(items);\r\n            // ===============add up each metric report===============\r\n            var likes,\r\n              comments,\r\n              reach,\r\n              shares,\r\n              leads,\r\n              impressions,\r\n              downloads,\r\n              views,\r\n              followers;\r\n            likes =\r\n              comments =\r\n              reach =\r\n              shares =\r\n              leads =\r\n              impressions =\r\n              downloads =\r\n              views =\r\n              followers =\r\n                0;\r\n            items.forEach((itemMetric) => {\r\n              likes += parseInt(itemMetric.likes);\r\n              comments += parseInt(itemMetric.comments);\r\n              reach += parseInt(itemMetric.reach);\r\n              shares += parseInt(itemMetric.shares);\r\n              leads += parseInt(itemMetric.leads);\r\n              impressions += parseInt(itemMetric.impressions);\r\n              downloads += parseInt(itemMetric.downloads);\r\n              views += parseInt(itemMetric.views);\r\n              followers += parseInt(itemMetric.followers);\r\n            });\r\n            setNumberTwitter({\r\n              likes,\r\n              comments,\r\n              reach,\r\n              shares,\r\n              leads,\r\n              impressions,\r\n              downloads,\r\n              views,\r\n              followers,\r\n            });\r\n            // ===============get the percentage met===============\r\n            finalAns = {\r\n              likes:\r\n                itemTotal.likes < 1\r\n                  ? 0\r\n                  : Math.round((likes / itemTotal.likes) * 100).toFixed(0),\r\n              // comments\r\n              comments:\r\n                itemTotal.comments < 1\r\n                  ? 0\r\n                  : Math.round((comments / itemTotal.comments) * 100).toFixed(\r\n                      0\r\n                    ),\r\n              // shares\r\n              shares:\r\n                itemTotal.shares < 1\r\n                  ? 0\r\n                  : Math.round((shares / itemTotal.shares) * 100).toFixed(0),\r\n              // reach\r\n              reach:\r\n                itemTotal.reach < 1\r\n                  ? 0\r\n                  : Math.round((reach / itemTotal.reach) * 100).toFixed(0),\r\n              // impressions\r\n              impressions:\r\n                itemTotal.impressions < 1\r\n                  ? 0\r\n                  : Math.round(\r\n                      (impressions / itemTotal.impressions) * 100\r\n                    ).toFixed(0),\r\n              // leads\r\n              leads:\r\n                itemTotal.leads < 1\r\n                  ? 0\r\n                  : Math.round((leads / itemTotal.leads) * 100).toFixed(0),\r\n              // views\r\n              views:\r\n                itemTotal.views < 1\r\n                  ? 0\r\n                  : Math.round((views / itemTotal.views) * 100).toFixed(0),\r\n              // downloads\r\n              downloads:\r\n                itemTotal.downloads < 1\r\n                  ? 0\r\n                  : Math.round((downloads / itemTotal.downloads) * 100).toFixed(\r\n                      0\r\n                    ),\r\n              // followers\r\n              followers:\r\n                itemTotal.followers < 1\r\n                  ? 0\r\n                  : Math.round((followers / itemTotal.followers) * 100).toFixed(\r\n                      0\r\n                    ),\r\n            };\r\n            // console.log(`${likes/parseInt(itemTotal.likes)} ${itemTotal.likes} likes and ${comments} comments`)\r\n            // console.log(finalAns)\r\n            setTotalMetricTwitter(finalAns);\r\n          })\r\n          .catch((err) => {\r\n            setError(err);\r\n          })\r\n      : console.log(\"No accounts yet\");\r\n  };\r\n\r\n  const viewInstagram = async (account) => {\r\n    // ===============set the assigned target metrics===============\r\n    var itemTotal;\r\n    accountsRef\r\n      .doc(`${account.label}-${currentUser.displayName}`)\r\n      .onSnapshot((querySnapshot) => {\r\n        itemTotal = querySnapshot.data().instagram;\r\n        setItemTotalInstagram(itemTotal);\r\n      });\r\n    var finalAns;\r\n    const items = [];\r\n    accounts.length > 0\r\n      ? accountsRef\r\n          .doc(`${account.label}-${currentUser.displayName}`)\r\n          .collection(\"instagram\")\r\n          .get()\r\n          .then((response) => {\r\n            // ===============get the subcollection metric===============\r\n            response.forEach((document) => {\r\n              const fetchedItem = {\r\n                id: document.id,\r\n                ...document.data(),\r\n              };\r\n              items.push(fetchedItem);\r\n            });\r\n            // console.log(items);\r\n            // ===============add up each metric report===============\r\n            var likes,\r\n              comments,\r\n              reach,\r\n              shares,\r\n              leads,\r\n              impressions,\r\n              downloads,\r\n              views,\r\n              saves,\r\n              followers;\r\n            likes =\r\n              comments =\r\n              reach =\r\n              shares =\r\n              saves =\r\n              leads =\r\n              impressions =\r\n              downloads =\r\n              views =\r\n              followers =\r\n                0;\r\n            items.forEach((itemMetric) => {\r\n              likes += parseInt(itemMetric.likes);\r\n              comments += parseInt(itemMetric.comments);\r\n              reach += parseInt(itemMetric.reach);\r\n              shares += parseInt(itemMetric.shares);\r\n              leads += parseInt(itemMetric.leads);\r\n              impressions += parseInt(itemMetric.impressions);\r\n              downloads += parseInt(itemMetric.downloads);\r\n              views += parseInt(itemMetric.views);\r\n              followers += parseInt(itemMetric.followers);\r\n              saves += parseInt(itemMetric.saves);\r\n            });\r\n            setNumberInstagram({\r\n              likes,\r\n              comments,\r\n              saves,\r\n              reach,\r\n              shares,\r\n              leads,\r\n              impressions,\r\n              downloads,\r\n              views,\r\n              followers,\r\n            });\r\n            // ===============get the percentage met===============\r\n            finalAns = {\r\n              likes:\r\n                itemTotal.likes < 1\r\n                  ? 0\r\n                  : Math.round((likes / itemTotal.likes) * 100).toFixed(0),\r\n              // comments\r\n              comments:\r\n                itemTotal.comments < 1\r\n                  ? 0\r\n                  : Math.round((comments / itemTotal.comments) * 100).toFixed(\r\n                      0\r\n                    ),\r\n              // shares\r\n              shares:\r\n                itemTotal.shares < 1\r\n                  ? 0\r\n                  : Math.round((shares / itemTotal.shares) * 100).toFixed(0),\r\n              //  saves\r\n              saves:\r\n                itemTotal.saves < 1\r\n                  ? 0\r\n                  : Math.round((saves / itemTotal.saves) * 100).toFixed(0),\r\n              // reach\r\n              reach:\r\n                itemTotal.reach < 1\r\n                  ? 0\r\n                  : Math.round((reach / itemTotal.reach) * 100).toFixed(0),\r\n              // impressions\r\n              impressions:\r\n                itemTotal.impressions < 1\r\n                  ? 0\r\n                  : Math.round(\r\n                      (impressions / itemTotal.impressions) * 100\r\n                    ).toFixed(0),\r\n              // leads\r\n              leads:\r\n                itemTotal.leads < 1\r\n                  ? 0\r\n                  : Math.round((leads / itemTotal.leads) * 100).toFixed(0),\r\n              // views\r\n              views:\r\n                itemTotal.views < 1\r\n                  ? 0\r\n                  : Math.round((views / itemTotal.views) * 100).toFixed(0),\r\n              // downloads\r\n              downloads:\r\n                itemTotal.downloads < 1\r\n                  ? 0\r\n                  : Math.round((downloads / itemTotal.downloads) * 100).toFixed(\r\n                      0\r\n                    ),\r\n              // followers\r\n              followers:\r\n                itemTotal.followers < 1\r\n                  ? 0\r\n                  : Math.round((followers / itemTotal.followers) * 100).toFixed(\r\n                      0\r\n                    ),\r\n            };\r\n            // console.log(`${likes/parseInt(itemTotal.likes)} ${itemTotal.likes} likes and ${comments} comments`)\r\n            // console.log(finalAns)\r\n            setTotalMetricInstagram(finalAns);\r\n          })\r\n          .catch((err) => {\r\n            setError(err);\r\n          })\r\n      : console.log(\"No accounts yet\");\r\n  };\r\n\r\n  const viewLinkedin = async (account) => {\r\n    // ===============set the assigned target metrics===============\r\n    var itemTotal;\r\n    accountsRef\r\n      .doc(`${account.label}-${currentUser.displayName}`)\r\n      .onSnapshot((querySnapshot) => {\r\n        itemTotal = querySnapshot.data().linkedin;\r\n        setItemTotalLinkedin(itemTotal);\r\n      });\r\n    var finalAns;\r\n    const items = [];\r\n    accounts.length > 0\r\n      ? accountsRef\r\n          .doc(`${account.label}-${currentUser.displayName}`)\r\n          .collection(\"linkedin\")\r\n          .get()\r\n          .then((response) => {\r\n            // ===============get the subcollection metric===============\r\n            response.forEach((document) => {\r\n              const fetchedItem = {\r\n                id: document.id,\r\n                ...document.data(),\r\n              };\r\n              items.push(fetchedItem);\r\n            });\r\n            // console.log(items);\r\n            // ===============add up each metric report===============\r\n            var likes,\r\n              comments,\r\n              reach,\r\n              shares,\r\n              leads,\r\n              impressions,\r\n              downloads,\r\n              views,\r\n              followers;\r\n            likes =\r\n              comments =\r\n              reach =\r\n              shares =\r\n              leads =\r\n              impressions =\r\n              downloads =\r\n              views =\r\n              followers =\r\n                0;\r\n            items.forEach((itemMetric) => {\r\n              likes += parseInt(itemMetric.likes);\r\n              comments += parseInt(itemMetric.comments);\r\n              reach += parseInt(itemMetric.reach);\r\n              shares += parseInt(itemMetric.shares);\r\n              leads += parseInt(itemMetric.leads);\r\n              impressions += parseInt(itemMetric.impressions);\r\n              downloads += parseInt(itemMetric.downloads);\r\n              views += parseInt(itemMetric.views);\r\n              followers += parseInt(itemMetric.followers);\r\n            });\r\n            setNumberLinkedin({\r\n              likes,\r\n              comments,\r\n              reach,\r\n              shares,\r\n              leads,\r\n              impressions,\r\n              downloads,\r\n              views,\r\n              followers,\r\n            });\r\n            // ===============get the percentage met===============\r\n            finalAns = {\r\n              likes:\r\n                itemTotal.likes < 1\r\n                  ? 0\r\n                  : Math.round((likes / itemTotal.likes) * 100).toFixed(0),\r\n              // comments\r\n              comments:\r\n                itemTotal.comments < 1\r\n                  ? 0\r\n                  : Math.round((comments / itemTotal.comments) * 100).toFixed(\r\n                      0\r\n                    ),\r\n              // shares\r\n              shares:\r\n                itemTotal.shares < 1\r\n                  ? 0\r\n                  : Math.round((shares / itemTotal.shares) * 100).toFixed(0),\r\n              // reach\r\n              reach:\r\n                itemTotal.reach < 1\r\n                  ? 0\r\n                  : Math.round((reach / itemTotal.reach) * 100).toFixed(0),\r\n              // impressions\r\n              impressions:\r\n                itemTotal.impressions < 1\r\n                  ? 0\r\n                  : Math.round(\r\n                      (impressions / itemTotal.impressions) * 100\r\n                    ).toFixed(0),\r\n              // leads\r\n              leads:\r\n                itemTotal.leads < 1\r\n                  ? 0\r\n                  : Math.round((leads / itemTotal.leads) * 100).toFixed(0),\r\n              // views\r\n              views:\r\n                itemTotal.views < 1\r\n                  ? 0\r\n                  : Math.round((views / itemTotal.views) * 100).toFixed(0),\r\n              // downloads\r\n              downloads:\r\n                itemTotal.downloads < 1\r\n                  ? 0\r\n                  : Math.round((downloads / itemTotal.downloads) * 100).toFixed(\r\n                      0\r\n                    ),\r\n              // followers\r\n              followers:\r\n                itemTotal.followers < 1\r\n                  ? 0\r\n                  : Math.round((followers / itemTotal.followers) * 100).toFixed(\r\n                      0\r\n                    ),\r\n            };\r\n            // console.log(`${likes/parseInt(itemTotal.likes)} ${itemTotal.likes} likes and ${comments} comments`)\r\n            // console.log(finalAns)\r\n            setTotalMetricLinkedin(finalAns);\r\n          })\r\n          .catch((err) => {\r\n            setError(err);\r\n          })\r\n      : console.log(\"No accounts yet\");\r\n  };\r\n\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(numberFacebook);\r\n    // console.log(itemTotalFacebook);\r\n  }, [numberFacebook, itemTotalFacebook]);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n    setIsLoading(true);\r\n    // viewFacebook(accounts[0])\r\n    currentUser\r\n      ? accountsRef\r\n          .where(\"manager\", \"==\", currentUser.displayName)\r\n          .get()\r\n          .then((response) => {\r\n            const items = [];\r\n            response.forEach((document) => {\r\n              const fetchedItem = {\r\n                id: document.id,\r\n                ...document.data(),\r\n              };\r\n              items.push(fetchedItem);\r\n            });\r\n            setAccounts(items);\r\n            setIsLoading(false);\r\n            // console.log(accounts);\r\n          })\r\n          .catch((err) => {\r\n            setError(err);\r\n            setIsLoading(true);\r\n          })\r\n      : console.log(\"No user\");\r\n    return function cleanup() {\r\n      abortController.abort();\r\n    };\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    accFacebook ? viewFacebook(accFacebook) : console.log(\"acc not ready\");\r\n    // console.log(accFacebook);\r\n  }, [accFacebook]);\r\n\r\n  useEffect(() => {\r\n    accTwitter ? viewTwitter(accTwitter) : console.log(\"acc not ready\");\r\n    // console.log(accTwitter);\r\n  }, [accTwitter]);\r\n\r\n  useEffect(() => {\r\n    accInstagram ? viewInstagram(accInstagram) : console.log(\"acc not ready\");\r\n    // console.log(accInstagram);\r\n  }, [accInstagram]);\r\n\r\n  useEffect(() => {\r\n    accLinkedin ? viewLinkedin(accLinkedin) : console.log(\"acc not ready\");\r\n    // console.log(accLinkedin);\r\n  }, [accLinkedin]);\r\n\r\n  useEffect(() => {\r\n    // console.log(totalMetricFacebook);\r\n  }, [totalMetricFacebook]);\r\n\r\n  useEffect(() => {\r\n    // console.log(totalMetricTwitter);\r\n  }, [totalMetricTwitter]);\r\n\r\n  useEffect(() => {\r\n    // console.log(totalMetricInstagram);\r\n  }, [totalMetricInstagram]);\r\n\r\n  useEffect(() => {\r\n    // console.log(totalMetricLinkedin);\r\n  }, [totalMetricLinkedin]);\r\n\r\n  useEffect(() => {\r\n    // console.log(totalMetricFacebook);\r\n  }, [metric]);\r\n\r\n  useEffect(() => {\r\n    // console.log(totalMetricFacebook);\r\n  }, [isOpen]);\r\n\r\n  if (!currentUser || currentUser.email === null) {\r\n    return (\r\n      <div>\r\n        <center>\r\n          {/* <h2>Please ensure you're signed in</h2> */}\r\n          <LoadingIndicator type=\"Circles\" height={100} width={100} />\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"Cover\">\r\n      <Nav\r\n        path=\"/addReport\"\r\n        name={\r\n          currentUser && currentUser.displayName\r\n            ? `Welcome, ${currentUser.displayName}`\r\n            : \"Welcome\"\r\n        }\r\n      />\r\n      {!isAdmin ? (\r\n        <div className=\"Wrap\">\r\n          <div className=\"head displayName\">\r\n            <h3>Welcome {currentUser.displayName}</h3>\r\n          </div>\r\n          <div className=\"Analytics\">\r\n            <div className=\"wrap\">\r\n              <div className=\"head\">\r\n                <h3>Here's your overview</h3>\r\n              </div>\r\n              {isLoading ? (\r\n                <center>\r\n                  <LoadingIndicator type=\"Rings\" height={50} width={50} />\r\n                </center>\r\n              ) : (\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Account</th>\r\n                      <th>Facebook</th>\r\n                      <th>Twitter</th>\r\n                      <th>Instagram</th>\r\n                      <th>Linkedin</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {accounts.map((account) => {\r\n                    return (\r\n                      <tbody key={account.id}>\r\n                        <tr>\r\n                          <td>{account.label}</td>\r\n                          <td>\r\n                            {account.facebook.likes < 1 &&\r\n                            account.facebook.comments < 1 &&\r\n                            account.facebook.views < 1 &&\r\n                            account.facebook.impressions < 1 &&\r\n                            account.facebook.reach < 1 &&\r\n                            account.facebook.downloads < 1 &&\r\n                            account.facebook.leads < 1 &&\r\n                            account.facebook.shares < 1 &&\r\n                            account.facebook.followers < 1 ? (\r\n                              <small>Unassigned</small>\r\n                            ) : (\r\n                              <small\r\n                                className=\"blue\"\r\n                                onClick={() => {\r\n                                  setMetric(\"facebook\");\r\n                                  setAccFacebook(account);\r\n                                  togglePopup();\r\n                                }}\r\n                              >\r\n                                View\r\n                              </small>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            {account.twitter.likes < 1 &&\r\n                            account.twitter.comments < 1 &&\r\n                            account.twitter.views < 1 &&\r\n                            account.twitter.impressions < 1 &&\r\n                            account.twitter.reach < 1 &&\r\n                            account.twitter.downloads < 1 &&\r\n                            account.twitter.leads < 1 &&\r\n                            account.twitter.shares < 1 &&\r\n                            account.twitter.followers < 1 ? (\r\n                              <small>Unassigned</small>\r\n                            ) : (\r\n                              <small\r\n                                className=\"blue\"\r\n                                onClick={() => {\r\n                                  setMetric(\"twitter\");\r\n                                  setAccTwitter(account);\r\n                                  togglePopup();\r\n                                }}\r\n                              >\r\n                                View\r\n                              </small>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            {account.instagram.likes < 1 &&\r\n                            account.instagram.comments < 1 &&\r\n                            account.instagram.views < 1 &&\r\n                            account.instagram.impressions < 1 &&\r\n                            account.instagram.reach < 1 &&\r\n                            account.instagram.downloads < 1 &&\r\n                            account.instagram.leads < 1 &&\r\n                            account.instagram.shares < 1 &&\r\n                            account.instagram.saves < 1 &&\r\n                            account.instagram.followers < 1 ? (\r\n                              <small>Unassigned</small>\r\n                            ) : (\r\n                              <small\r\n                                className=\"blue\"\r\n                                onClick={() => {\r\n                                  setMetric(\"instagram\");\r\n                                  setAccInstagram(account);\r\n                                  togglePopup();\r\n                                }}\r\n                              >\r\n                                View\r\n                              </small>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            {account.linkedin.likes < 1 &&\r\n                            account.linkedin.comments < 1 &&\r\n                            account.linkedin.views < 1 &&\r\n                            account.linkedin.impressions < 1 &&\r\n                            account.linkedin.reach < 1 &&\r\n                            account.linkedin.downloads < 1 &&\r\n                            account.linkedin.leads < 1 &&\r\n                            account.linkedin.shares < 1 &&\r\n                            account.linkedin.followers < 1 ? (\r\n                              <small>Unassigned</small>\r\n                            ) : (\r\n                              <small\r\n                                className=\"blue\"\r\n                                onClick={() => {\r\n                                  setMetric(\"linkedin\");\r\n                                  setAccLinkedin(account);\r\n                                  togglePopup();\r\n                                }}\r\n                              >\r\n                                View\r\n                              </small>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    );\r\n                  })}\r\n                </table>\r\n              )}\r\n              {isOpen && (\r\n                <Popup\r\n                  content={\r\n                    <div>\r\n                      <div className=\"head\">\r\n                        <h3>Percentage met so far</h3>\r\n                      </div>\r\n                      {metric === \"facebook\" ? (\r\n                        <>\r\n                          <div className=\"\">\r\n                            <div>{accFacebook.label} Facebook</div>\r\n                          </div>\r\n                          {numberFacebook.likes !== undefined ||\r\n                          numberFacebook.comments !== undefined ||\r\n                          numberFacebook.impressions !== undefined ||\r\n                          numberFacebook.shares !== undefined ||\r\n                          numberFacebook.views !== undefined ||\r\n                          numberFacebook.reach !== undefined ||\r\n                          numberFacebook.downloads !== undefined ? (\r\n                            <>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.likes} of ${itemTotalFacebook.likes}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.likes}% likes`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.comments} of ${itemTotalFacebook.comments}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.comments}% comments`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.shares} of ${itemTotalFacebook.shares}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.shares}% shares`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.leads} of ${itemTotalFacebook.leads}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.leads}% leads`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.impressions} of ${itemTotalFacebook.impressions}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.impressions}% impressions`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.reach} of ${itemTotalFacebook.reach}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.reach}% reach`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.followers} of ${itemTotalFacebook.followers}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.followers}% followers`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.views} of ${itemTotalFacebook.views}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.views}% views`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.downloads} of ${itemTotalFacebook.downloads}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.downloads}% downloads`}</span>\r\n                              </p>\r\n                            </>\r\n                          ) : (\r\n                            <center>\r\n                              <LoadingIndicator\r\n                                type=\"Rings\"\r\n                                height={50}\r\n                                width={50}\r\n                              />\r\n                            </center>\r\n                          )}\r\n                        </>\r\n                      ) : metric === \"twitter\" ? (\r\n                        <>\r\n                          <div className=\"\">\r\n                            <div>{accTwitter.label} Twitter</div>\r\n                          </div>\r\n                          {numberTwitter.likes !== undefined ||\r\n                          numberTwitter.comments !== undefined ||\r\n                          numberTwitter.impressions !== undefined ||\r\n                          numberTwitter.shares !== undefined ||\r\n                          numberTwitter.views !== undefined ||\r\n                          numberTwitter.reach !== undefined ||\r\n                          numberTwitter.downloads !== undefined ? (\r\n                            <>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.likes} of ${itemTotalTwitter.likes}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.likes}% likes`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.comments} of ${itemTotalTwitter.comments}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.comments}% comments`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.shares} of ${itemTotalTwitter.shares}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.shares}% retweets`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.leads} of ${itemTotalTwitter.leads}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.leads}% leads`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.impressions} of ${itemTotalTwitter.impressions}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.impressions}% impressions`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.reach} of ${itemTotalTwitter.reach}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.reach}% reach`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.followers} of ${itemTotalTwitter.followers}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.followers}% followers`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.views} of ${itemTotalTwitter.views}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.views}% views`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.downloads} of ${itemTotalTwitter.downloads}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.downloads}% downloads`}</span>\r\n                              </p>\r\n                            </>\r\n                          ) : (\r\n                            <center>\r\n                              <LoadingIndicator\r\n                                type=\"Rings\"\r\n                                height={50}\r\n                                width={50}\r\n                              />\r\n                            </center>\r\n                          )}\r\n                        </>\r\n                      ) : metric === \"instagram\" ? (\r\n                        <>\r\n                          <div className=\"\">\r\n                            <div>{accInstagram.label} Instagram</div>\r\n                          </div>\r\n                          {numberInstagram.likes !== undefined ||\r\n                          numberInstagram.comments !== undefined ||\r\n                          numberInstagram.impressions !== undefined ||\r\n                          numberInstagram.shares !== undefined ||\r\n                          numberInstagram.views !== undefined ||\r\n                          numberInstagram.reach !== undefined ||\r\n                          numberInstagram.saves !== undefined ||\r\n                          numberInstagram.downloads !== undefined ? (\r\n                            <>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberInstagram.likes} of ${itemTotalInstagram.likes}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricInstagram.likes}% likes`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberInstagram.comments} of ${itemTotalInstagram.comments}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricInstagram.comments}% comments`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberInstagram.saves} of ${itemTotalInstagram.saves}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricInstagram.saves}% saves`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberInstagram.shares} of ${itemTotalInstagram.shares}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricInstagram.shares}% shares`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberInstagram.leads} of ${itemTotalInstagram.leads}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricInstagram.leads}% leads`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberInstagram.impressions} of ${itemTotalInstagram.impressions}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricInstagram.impressions}% impressions`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberInstagram.reach} of ${itemTotalInstagram.reach}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricInstagram.reach}% reach`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberInstagram.followers} of ${itemTotalInstagram.followers}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricInstagram.followers}% followers`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberInstagram.views} of ${itemTotalInstagram.views}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricInstagram.views}% views`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberInstagram.downloads} of ${itemTotalInstagram.downloads}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricInstagram.downloads}% downloads`}</span>\r\n                              </p>\r\n                            </>\r\n                          ) : (\r\n                            <center>\r\n                              <LoadingIndicator\r\n                                type=\"Rings\"\r\n                                height={50}\r\n                                width={50}\r\n                              />\r\n                            </center>\r\n                          )}\r\n                        </>\r\n                      ) : metric === \"linkedin\" ? (\r\n                        <>\r\n                          <div className=\"\">\r\n                            <div>{accLinkedin.label} Linkedin</div>\r\n                          </div>\r\n                          {numberLinkedin.likes !== undefined ||\r\n                          numberLinkedin.comments !== undefined ||\r\n                          numberLinkedin.impressions !== undefined ||\r\n                          numberLinkedin.shares !== undefined ||\r\n                          numberLinkedin.views !== undefined ||\r\n                          numberLinkedin.reach !== undefined ||\r\n                          numberLinkedin.downloads !== undefined ? (\r\n                            <>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberLinkedin.likes} of ${itemTotalLinkedin.likes}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricLinkedin.likes}% likes`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberLinkedin.comments} of ${itemTotalLinkedin.comments}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricLinkedin.comments}% comments`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberLinkedin.shares} of ${itemTotalLinkedin.shares}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricLinkedin.shares}% shares`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberLinkedin.leads} of ${itemTotalLinkedin.leads}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricLinkedin.leads}% leads`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberLinkedin.impressions} of ${itemTotalLinkedin.impressions}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricLinkedin.impressions}% impressions`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberLinkedin.reach} of ${itemTotalLinkedin.reach}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricLinkedin.reach}% reach`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberLinkedin.followers} of ${itemTotalLinkedin.followers}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricLinkedin.followers}% followers`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberLinkedin.views} of ${itemTotalLinkedin.views}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricLinkedin.views}% views`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberLinkedin.downloads} of ${itemTotalLinkedin.downloads}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricLinkedin.downloads}% downloads`}</span>\r\n                              </p>\r\n                            </>\r\n                          ) : (\r\n                            <center>\r\n                              <LoadingIndicator\r\n                                type=\"Rings\"\r\n                                height={50}\r\n                                width={50}\r\n                              />\r\n                            </center>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        <center>\r\n                          <LoadingIndicator\r\n                            type=\"Rings\"\r\n                            height={50}\r\n                            width={50}\r\n                          />\r\n                        </center>\r\n                      )}\r\n                    </div>\r\n                  }\r\n                  handleClose={togglePopup}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <center>\r\n            <h2>Please you're not a Community manager for any account</h2>\r\n          </center>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManagerAnalytics;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport firebase from \"../../lib/firebase\";\r\nimport { AuthContext } from \"../../App\";\r\nimport Popup from \"./Popup\";\r\nimport \"./admin.css\";\r\nimport Nav from \"../Nav\";\r\nimport LoadingIndicator from \"../LoadingIndicator\";\r\n\r\nfunction Analytics() {\r\n  const { currentUser, isAdmin } = useContext(AuthContext);\r\n  const accountsRef = firebase.firestore().collection(\"account\");\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [accFacebook, setAccFacebook] = useState();\r\n  const [accTwitter, setAccTwitter] = useState();\r\n  const [accInstagram, setAccInstagram] = useState();\r\n  const [accLinkedin, setAccLinkedin] = useState();\r\n  const [metric, setMetric] = useState(\"\");\r\n  const [totalMetricFacebook, setTotalMetricFacebook] = useState({});\r\n  const [numberFacebook, setNumberFacebook] = useState({});\r\n  const [itemTotalFacebook, setItemTotalFacebook] = useState({});\r\n  const [totalMetricTwitter, setTotalMetricTwitter] = useState({});\r\n  const [numberTwitter, setNumberTwitter] = useState({});\r\n  const [itemTotalTwitter, setItemTotalTwitter] = useState({});\r\n  const [totalMetricInstagram, setTotalMetricInstagram] = useState({});\r\n  const [numberInstagram, setNumberInstagram] = useState({});\r\n  const [itemTotalInstagram, setItemTotalInstagram] = useState({});\r\n  const [totalMetricLinkedin, setTotalMetricLinkedin] = useState({});\r\n  const [numberLinkedin, setNumberLinkedin] = useState({});\r\n  const [itemTotalLinkedin, setItemTotalLinkedin] = useState({});\r\n  const [error, setError] = useState();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [platformList, setPlatformList] = useState([]);\r\n\r\n  const viewFacebook = async (account) => {\r\n    // ===============set the assigned target metrics===============\r\n    var itemTotal;\r\n    accountsRef\r\n      .doc(`${account.label}-${account.manager}`)\r\n      .onSnapshot((querySnapshot) => {\r\n        itemTotal = querySnapshot.data().facebook;\r\n        setItemTotalFacebook(itemTotal);\r\n        // console.log(itemTotal);\r\n      });\r\n    var finalAns;\r\n    const items = [];\r\n    accounts.length > 0 &&\r\n      accountsRef\r\n        .doc(`${account.label}-${account.manager}`)\r\n        .collection(\"facebook\")\r\n        .get()\r\n        .then((response) => {\r\n          // ===============get the subcollection metric===============\r\n          response.forEach((document) => {\r\n            const fetchedItem = {\r\n              id: document.id,\r\n              ...document.data(),\r\n            };\r\n            items.push(fetchedItem);\r\n          });\r\n          // console.log(items);\r\n          // ===============add up each metric report===============\r\n          var likes,\r\n            comments,\r\n            reach,\r\n            shares,\r\n            leads,\r\n            impressions,\r\n            downloads,\r\n            views,\r\n            followers;\r\n          likes =\r\n            comments =\r\n            reach =\r\n            shares =\r\n            leads =\r\n            impressions =\r\n            downloads =\r\n            views =\r\n            followers =\r\n              0;\r\n          items.forEach((itemMetric) => {\r\n            likes += parseInt(itemMetric.likes);\r\n            comments += parseInt(itemMetric.comments);\r\n            reach += parseInt(itemMetric.reach);\r\n            shares += parseInt(itemMetric.shares);\r\n            leads += parseInt(itemMetric.leads);\r\n            impressions += parseInt(itemMetric.impressions);\r\n            downloads += parseInt(itemMetric.downloads);\r\n            views += parseInt(itemMetric.views);\r\n            followers += parseInt(itemMetric.followers);\r\n          });\r\n          setNumberFacebook({\r\n            likes,\r\n            comments,\r\n            reach,\r\n            shares,\r\n            leads,\r\n            impressions,\r\n            downloads,\r\n            views,\r\n            followers,\r\n          });\r\n          // ===============get the percentage met===============\r\n          finalAns = {\r\n            likes:\r\n              itemTotal.likes < 1\r\n                ? 0\r\n                : Math.round((likes / itemTotal.likes) * 100).toFixed(0),\r\n            // comments\r\n            comments:\r\n              itemTotal.comments < 1\r\n                ? 0\r\n                : Math.round((comments / itemTotal.comments) * 100).toFixed(0),\r\n            // shares\r\n            shares:\r\n              itemTotal.shares < 1\r\n                ? 0\r\n                : Math.round((shares / itemTotal.shares) * 100).toFixed(0),\r\n            // reach\r\n            reach:\r\n              itemTotal.reach < 1\r\n                ? 0\r\n                : Math.round((reach / itemTotal.reach) * 100).toFixed(0),\r\n            // impressions\r\n            impressions:\r\n              itemTotal.impressions < 1\r\n                ? 0\r\n                : Math.round(\r\n                    (impressions / itemTotal.impressions) * 100\r\n                  ).toFixed(0),\r\n            // leads\r\n            leads:\r\n              itemTotal.leads < 1\r\n                ? 0\r\n                : Math.round((leads / itemTotal.leads) * 100).toFixed(0),\r\n            // views\r\n            views:\r\n              itemTotal.views < 1\r\n                ? 0\r\n                : Math.round((views / itemTotal.views) * 100).toFixed(0),\r\n            // downloads\r\n            downloads:\r\n              itemTotal.downloads < 1\r\n                ? 0\r\n                : Math.round((downloads / itemTotal.downloads) * 100).toFixed(\r\n                    0\r\n                  ),\r\n            // followers\r\n            followers:\r\n              itemTotal.followers < 1\r\n                ? 0\r\n                : Math.round((followers / itemTotal.followers) * 100).toFixed(\r\n                    0\r\n                  ),\r\n          };\r\n          // console.log(`${likes/parseInt(itemTotal.likes)} ${itemTotal.likes} likes and ${comments} comments`)\r\n          // console.log(finalAns)\r\n          setTotalMetricFacebook(finalAns);\r\n        })\r\n        .catch((err) => {\r\n          setError(err);\r\n        });\r\n  };\r\n\r\n  const viewTwitter = async (account) => {\r\n    accountsRef\r\n      .doc(`${account.label}-${account.manager}`)\r\n      .onSnapshot((querySnapshot) => {\r\n        const list = querySnapshot.data().platformList;\r\n        setPlatformList(list);\r\n      });\r\n    // ===============set the assigned target metrics===============\r\n    var itemTotal;\r\n    accountsRef\r\n      .doc(`${account.label}-${account.manager}`)\r\n      .onSnapshot((querySnapshot) => {\r\n        itemTotal = querySnapshot.data().twitter;\r\n        setItemTotalTwitter(itemTotal);\r\n        // console.log(itemTotal);\r\n      });\r\n    var finalAns;\r\n    const items = [];\r\n    accounts.length > 0\r\n      ? accountsRef\r\n          .doc(`${account.label}-${account.manager}`)\r\n          .collection(\"twitter\")\r\n          .get()\r\n          .then((response) => {\r\n            // ===============get the subcollection metric===============\r\n            response.forEach((document) => {\r\n              const fetchedItem = {\r\n                id: document.id,\r\n                ...document.data(),\r\n              };\r\n              items.push(fetchedItem);\r\n            });\r\n            // console.log(items);\r\n            // ===============add up each metric report===============\r\n            var likes,\r\n              comments,\r\n              reach,\r\n              shares,\r\n              leads,\r\n              impressions,\r\n              downloads,\r\n              views,\r\n              followers;\r\n            likes =\r\n              comments =\r\n              reach =\r\n              shares =\r\n              leads =\r\n              impressions =\r\n              downloads =\r\n              views =\r\n              followers =\r\n                0;\r\n            items.forEach((itemMetric) => {\r\n              likes += parseInt(itemMetric.likes);\r\n              comments += parseInt(itemMetric.comments);\r\n              reach += parseInt(itemMetric.reach);\r\n              shares += parseInt(itemMetric.shares);\r\n              leads += parseInt(itemMetric.leads);\r\n              impressions += parseInt(itemMetric.impressions);\r\n              downloads += parseInt(itemMetric.downloads);\r\n              views += parseInt(itemMetric.views);\r\n              followers += parseInt(itemMetric.followers);\r\n            });\r\n            setNumberTwitter({\r\n              likes,\r\n              comments,\r\n              reach,\r\n              shares,\r\n              leads,\r\n              impressions,\r\n              downloads,\r\n              views,\r\n              followers,\r\n            });\r\n            // ===============get the percentage met===============\r\n            finalAns = {\r\n              likes:\r\n                itemTotal.likes < 1\r\n                  ? 0\r\n                  : Math.round((likes / itemTotal.likes) * 100).toFixed(0),\r\n              // comments\r\n              comments:\r\n                itemTotal.comments < 1\r\n                  ? 0\r\n                  : Math.round((comments / itemTotal.comments) * 100).toFixed(\r\n                      0\r\n                    ),\r\n              // shares\r\n              shares:\r\n                itemTotal.shares < 1\r\n                  ? 0\r\n                  : Math.round((shares / itemTotal.shares) * 100).toFixed(0),\r\n              // reach\r\n              reach:\r\n                itemTotal.reach < 1\r\n                  ? 0\r\n                  : Math.round((reach / itemTotal.reach) * 100).toFixed(0),\r\n              // impressions\r\n              impressions:\r\n                itemTotal.impressions < 1\r\n                  ? 0\r\n                  : Math.round(\r\n                      (impressions / itemTotal.impressions) * 100\r\n                    ).toFixed(0),\r\n              // leads\r\n              leads:\r\n                itemTotal.leads < 1\r\n                  ? 0\r\n                  : Math.round((leads / itemTotal.leads) * 100).toFixed(0),\r\n              // views\r\n              views:\r\n                itemTotal.views < 1\r\n                  ? 0\r\n                  : Math.round((views / itemTotal.views) * 100).toFixed(0),\r\n              // downloads\r\n              downloads:\r\n                itemTotal.downloads < 1\r\n                  ? 0\r\n                  : Math.round((downloads / itemTotal.downloads) * 100).toFixed(\r\n                      0\r\n                    ),\r\n              // followers\r\n              followers:\r\n                itemTotal.followers < 1\r\n                  ? 0\r\n                  : Math.round((followers / itemTotal.followers) * 100).toFixed(\r\n                      0\r\n                    ),\r\n            };\r\n            // console.log(`${likes/parseInt(itemTotal.likes)} ${itemTotal.likes} likes and ${comments} comments`)\r\n            // console.log(finalAns)\r\n            setTotalMetricTwitter(finalAns);\r\n          })\r\n          .catch((err) => {\r\n            setError(err);\r\n          })\r\n      : console.log(\"No accounts yet\");\r\n  };\r\n\r\n  const viewInstagram = async (account) => {\r\n    accountsRef\r\n      .doc(`${account.label}-${account.manager}`)\r\n      .onSnapshot((querySnapshot) => {\r\n        const list = querySnapshot.data().platformList;\r\n        setPlatformList(list);\r\n      });\r\n    // ===============set the assigned target metrics===============\r\n    var itemTotal;\r\n    accountsRef\r\n      .doc(`${account.label}-${account.manager}`)\r\n      .onSnapshot((querySnapshot) => {\r\n        itemTotal = querySnapshot.data().instagram;\r\n        setItemTotalInstagram(itemTotal);\r\n        // console.log(itemTotal);\r\n      });\r\n    var finalAns;\r\n    const items = [];\r\n    accounts.length > 0\r\n      ? accountsRef\r\n          .doc(`${account.label}-${account.manager}`)\r\n          .collection(\"instagram\")\r\n          .get()\r\n          .then((response) => {\r\n            // ===============get the subcollection metric===============\r\n            response.forEach((document) => {\r\n              const fetchedItem = {\r\n                id: document.id,\r\n                ...document.data(),\r\n              };\r\n              items.push(fetchedItem);\r\n            });\r\n            // console.log(items);\r\n            // ===============add up each metric report===============\r\n            var likes,\r\n              comments,\r\n              reach,\r\n              shares,\r\n              leads,\r\n              impressions,\r\n              downloads,\r\n              views,\r\n              saves,\r\n              followers;\r\n            likes =\r\n              comments =\r\n              reach =\r\n              shares =\r\n              saves =\r\n              leads =\r\n              impressions =\r\n              downloads =\r\n              views =\r\n              followers =\r\n                0;\r\n            items.forEach((itemMetric) => {\r\n              likes += parseInt(itemMetric.likes);\r\n              comments += parseInt(itemMetric.comments);\r\n              reach += parseInt(itemMetric.reach);\r\n              shares += parseInt(itemMetric.shares);\r\n              leads += parseInt(itemMetric.leads);\r\n              impressions += parseInt(itemMetric.impressions);\r\n              downloads += parseInt(itemMetric.downloads);\r\n              views += parseInt(itemMetric.views);\r\n              followers += parseInt(itemMetric.followers);\r\n              saves += parseInt(itemMetric.saves);\r\n            });\r\n            setNumberInstagram({\r\n              likes,\r\n              comments,\r\n              saves,\r\n              reach,\r\n              shares,\r\n              leads,\r\n              impressions,\r\n              downloads,\r\n              views,\r\n              followers,\r\n            });\r\n            // ===============get the percentage met===============\r\n            finalAns = {\r\n              likes:\r\n                itemTotal.likes < 1\r\n                  ? 0\r\n                  : Math.round((likes / itemTotal.likes) * 100).toFixed(0),\r\n              // comments\r\n              comments:\r\n                itemTotal.comments < 1\r\n                  ? 0\r\n                  : Math.round((comments / itemTotal.comments) * 100).toFixed(\r\n                      0\r\n                    ),\r\n              // saves\r\n              saves:\r\n                itemTotal.saves < 1\r\n                  ? 0\r\n                  : Math.round((saves / itemTotal.saves) * 100).toFixed(0),\r\n              // shares\r\n              shares:\r\n                itemTotal.shares < 1\r\n                  ? 0\r\n                  : Math.round((shares / itemTotal.shares) * 100).toFixed(0),\r\n              // reach\r\n              reach:\r\n                itemTotal.reach < 1\r\n                  ? 0\r\n                  : Math.round((reach / itemTotal.reach) * 100).toFixed(0),\r\n              // impressions\r\n              impressions:\r\n                itemTotal.impressions < 1\r\n                  ? 0\r\n                  : Math.round(\r\n                      (impressions / itemTotal.impressions) * 100\r\n                    ).toFixed(0),\r\n              // leads\r\n              leads:\r\n                itemTotal.leads < 1\r\n                  ? 0\r\n                  : Math.round((leads / itemTotal.leads) * 100).toFixed(0),\r\n              // views\r\n              views:\r\n                itemTotal.views < 1\r\n                  ? 0\r\n                  : Math.round((views / itemTotal.views) * 100).toFixed(0),\r\n              // downloads\r\n              downloads:\r\n                itemTotal.downloads < 1\r\n                  ? 0\r\n                  : Math.round((downloads / itemTotal.downloads) * 100).toFixed(\r\n                      0\r\n                    ),\r\n              // followers\r\n              followers:\r\n                itemTotal.followers < 1\r\n                  ? 0\r\n                  : Math.round((followers / itemTotal.followers) * 100).toFixed(\r\n                      0\r\n                    ),\r\n            };\r\n            // console.log(`${likes/parseInt(itemTotal.likes)} ${itemTotal.likes} likes and ${comments} comments`)\r\n            // console.log(finalAns)\r\n            setTotalMetricInstagram(finalAns);\r\n          })\r\n          .catch((err) => {\r\n            setError(err);\r\n          })\r\n      : console.log(\"No accounts yet\");\r\n  };\r\n\r\n  const viewLinkedin = async (account) => {\r\n    accountsRef\r\n      .doc(`${account.label}-${account.manager}`)\r\n      .onSnapshot((querySnapshot) => {\r\n        const list = querySnapshot.data().platformList;\r\n        setPlatformList(list);\r\n      });\r\n    // ===============set the assigned target metrics===============\r\n    var itemTotal;\r\n    accountsRef\r\n      .doc(`${account.label}-${account.manager}`)\r\n      .onSnapshot((querySnapshot) => {\r\n        itemTotal = querySnapshot.data().linkedin;\r\n        setItemTotalLinkedin(itemTotal);\r\n        // console.log(itemTotal);\r\n      });\r\n    var finalAns;\r\n    const items = [];\r\n    accounts.length > 0\r\n      ? accountsRef\r\n          .doc(`${account.label}-${account.manager}`)\r\n          .collection(\"linkedin\")\r\n          .get()\r\n          .then((response) => {\r\n            // ===============get the subcollection metric===============\r\n            response.forEach((document) => {\r\n              const fetchedItem = {\r\n                id: document.id,\r\n                ...document.data(),\r\n              };\r\n              items.push(fetchedItem);\r\n            });\r\n            // console.log(items);\r\n            // ===============add up each metric report===============\r\n            var likes,\r\n              comments,\r\n              reach,\r\n              shares,\r\n              leads,\r\n              impressions,\r\n              downloads,\r\n              views,\r\n              followers;\r\n            likes =\r\n              comments =\r\n              reach =\r\n              shares =\r\n              leads =\r\n              impressions =\r\n              downloads =\r\n              views =\r\n              followers =\r\n                0;\r\n            items.forEach((itemMetric) => {\r\n              likes += parseInt(itemMetric.likes);\r\n              comments += parseInt(itemMetric.comments);\r\n              reach += parseInt(itemMetric.reach);\r\n              shares += parseInt(itemMetric.shares);\r\n              leads += parseInt(itemMetric.leads);\r\n              impressions += parseInt(itemMetric.impressions);\r\n              downloads += parseInt(itemMetric.downloads);\r\n              views += parseInt(itemMetric.views);\r\n              followers += parseInt(itemMetric.followers);\r\n            });\r\n            setNumberLinkedin({\r\n              likes,\r\n              comments,\r\n              reach,\r\n              shares,\r\n              leads,\r\n              impressions,\r\n              downloads,\r\n              views,\r\n              followers,\r\n            });\r\n            // ===============get the percentage met===============\r\n            finalAns = {\r\n              likes:\r\n                itemTotal.likes < 1\r\n                  ? 0\r\n                  : Math.round((likes / itemTotal.likes) * 100).toFixed(0),\r\n              // comments\r\n              comments:\r\n                itemTotal.comments < 1\r\n                  ? 0\r\n                  : Math.round((comments / itemTotal.comments) * 100).toFixed(\r\n                      0\r\n                    ),\r\n              // shares\r\n              shares:\r\n                itemTotal.shares < 1\r\n                  ? 0\r\n                  : Math.round((shares / itemTotal.shares) * 100).toFixed(0),\r\n              // reach\r\n              reach:\r\n                itemTotal.reach < 1\r\n                  ? 0\r\n                  : Math.round((reach / itemTotal.reach) * 100).toFixed(0),\r\n              // impressions\r\n              impressions:\r\n                itemTotal.impressions < 1\r\n                  ? 0\r\n                  : Math.round(\r\n                      (impressions / itemTotal.impressions) * 100\r\n                    ).toFixed(0),\r\n              // leads\r\n              leads:\r\n                itemTotal.leads < 1\r\n                  ? 0\r\n                  : Math.round((leads / itemTotal.leads) * 100).toFixed(0),\r\n              // views\r\n              views:\r\n                itemTotal.views < 1\r\n                  ? 0\r\n                  : Math.round((views / itemTotal.views) * 100).toFixed(0),\r\n              // downloads\r\n              downloads:\r\n                itemTotal.downloads < 1\r\n                  ? 0\r\n                  : Math.round((downloads / itemTotal.downloads) * 100).toFixed(\r\n                      0\r\n                    ),\r\n              // followers\r\n              followers:\r\n                itemTotal.followers < 1\r\n                  ? 0\r\n                  : Math.round((followers / itemTotal.followers) * 100).toFixed(\r\n                      0\r\n                    ),\r\n            };\r\n            // console.log(`${likes/parseInt(itemTotal.likes)} ${itemTotal.likes} likes and ${comments} comments`)\r\n            // console.log(finalAns)\r\n            setTotalMetricLinkedin(finalAns);\r\n          })\r\n          .catch((err) => {\r\n            setError(err);\r\n          })\r\n      : console.log(\"No accounts yet\");\r\n  };\r\n\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const showView = async (account) => {\r\n    accountsRef\r\n      .doc(`${account.label}-${account.manager}`)\r\n      .onSnapshot((querySnapshot) => {\r\n        const list = querySnapshot.data().platformList;\r\n        setPlatformList(list);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    // viewFacebook(accounts[0])\r\n    currentUser\r\n      ? accountsRef\r\n          .get()\r\n          .then((response) => {\r\n            const items = [];\r\n            response.forEach((document) => {\r\n              const fetchedItem = {\r\n                id: document.id,\r\n                ...document.data(),\r\n              };\r\n              items.push(fetchedItem);\r\n            });\r\n            setAccounts(items);\r\n            setIsLoading(false);\r\n            // console.log(accounts);\r\n          })\r\n          .catch((err) => {\r\n            setError(err);\r\n            setIsLoading(true);\r\n          })\r\n      : console.log(\"No user\");\r\n    // console.log(isAdmin)\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    accFacebook ? viewFacebook(accFacebook) : console.log(\"acc not ready\");\r\n    // console.log(accFacebook);\r\n  }, [accFacebook]);\r\n\r\n  useEffect(() => {\r\n    accTwitter ? viewTwitter(accTwitter) : console.log(\"acc not ready\");\r\n    // console.log(accTwitter);\r\n  }, [accTwitter]);\r\n\r\n  useEffect(() => {\r\n    accInstagram ? viewInstagram(accInstagram) : console.log(\"acc not ready\");\r\n    // console.log(accInstagram);\r\n  }, [accInstagram]);\r\n\r\n  useEffect(() => {\r\n    accLinkedin ? viewLinkedin(accLinkedin) : console.log(\"acc not ready\");\r\n    // console.log(accLinkedin);\r\n  }, [accLinkedin]);\r\n\r\n  useEffect(() => {\r\n    // console.log(totalMetricFacebook);\r\n  }, [totalMetricFacebook]);\r\n\r\n  useEffect(() => {\r\n    // console.log(totalMetricTwitter);\r\n  }, [totalMetricTwitter]);\r\n\r\n  useEffect(() => {\r\n    // console.log(totalMetricInstagram);\r\n  }, [totalMetricInstagram]);\r\n\r\n  useEffect(() => {\r\n    // console.log(totalMetricLinkedin);\r\n  }, [totalMetricLinkedin]);\r\n\r\n  useEffect(() => {\r\n    // console.log(totalMetricFacebook);\r\n  }, [metric]);\r\n\r\n  useEffect(() => {}, [numberFacebook]);\r\n\r\n  // useEffect(() => console.log(platformList), [platformList]);\r\n\r\n  useEffect(() => {\r\n    // console.log(totalMetricFacebook);\r\n  }, [isOpen]);\r\n\r\n  if (!currentUser || currentUser.email === null) {\r\n    return (\r\n      <div>\r\n        <center>\r\n          <LoadingIndicator type=\"Circles\" height={100} width={100} />\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"Cover\">\r\n      <Nav\r\n        path=\"/addAccount\"\r\n        name={currentUser ? `Welcome, ${currentUser.displayName}` : \"\"}\r\n      />\r\n      {isAdmin ? (\r\n        <div className=\"Wrap\">\r\n          <div className=\"head displayName\">\r\n            <h3>Welcome {currentUser.displayName}</h3>\r\n          </div>\r\n          <div className=\"Analytics\">\r\n            <div className=\"wrap\">\r\n              <div className=\"head\">\r\n                <h3>Accounts overview</h3>\r\n              </div>\r\n              {isLoading ? (\r\n                <center>\r\n                  <LoadingIndicator type=\"Rings\" height={50} width={50} />\r\n                </center>\r\n              ) : (\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Account</th>\r\n                      <th>Handler</th>\r\n                      <th>Facebook</th>\r\n                      <th>Twitter</th>\r\n                      <th>Instagram</th>\r\n                      <th>Linkedin</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {accounts.map((account) => {\r\n                    return (\r\n                      <tbody key={account.id}>\r\n                        <tr>\r\n                          <td>{account.label}</td>\r\n                          <td>{account.manager}</td>\r\n                          <td>\r\n                            {account.facebook.likes < 1 &&\r\n                            account.facebook.comments < 1 &&\r\n                            account.facebook.views < 1 &&\r\n                            account.facebook.impressions < 1 &&\r\n                            account.facebook.reach < 1 &&\r\n                            account.facebook.downloads < 1 &&\r\n                            account.facebook.leads < 1 &&\r\n                            account.facebook.shares < 1 &&\r\n                            account.facebook.followers < 1 ? (\r\n                              <small>Unassigned</small>\r\n                            ) : (\r\n                              <small\r\n                                className=\"blue\"\r\n                                onClick={() => {\r\n                                  setMetric(\"facebook\");\r\n                                  setAccFacebook(account);\r\n                                  togglePopup();\r\n                                }}\r\n                              >\r\n                                View\r\n                              </small>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            {account.twitter.likes < 1 &&\r\n                            account.twitter.comments < 1 &&\r\n                            account.twitter.views < 1 &&\r\n                            account.twitter.impressions < 1 &&\r\n                            account.twitter.reach < 1 &&\r\n                            account.twitter.downloads < 1 &&\r\n                            account.twitter.leads < 1 &&\r\n                            account.twitter.shares < 1 &&\r\n                            account.twitter.followers < 1 ? (\r\n                              <small>Unassigned</small>\r\n                            ) : (\r\n                              <small\r\n                                className=\"blue\"\r\n                                onClick={() => {\r\n                                  setMetric(\"twitter\");\r\n                                  setAccTwitter(account);\r\n                                  togglePopup();\r\n                                }}\r\n                              >\r\n                                View\r\n                              </small>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            {account.instagram.likes < 1 &&\r\n                            account.instagram.comments < 1 &&\r\n                            account.instagram.views < 1 &&\r\n                            account.instagram.impressions < 1 &&\r\n                            account.instagram.reach < 1 &&\r\n                            account.instagram.downloads < 1 &&\r\n                            account.instagram.leads < 1 &&\r\n                            account.instagram.shares < 1 &&\r\n                            account.instagram.saves < 1 &&\r\n                            account.instagram.followers < 1 ? (\r\n                              <small>Unassigned</small>\r\n                            ) : (\r\n                              <small\r\n                                className=\"blue\"\r\n                                onClick={() => {\r\n                                  setMetric(\"instagram\");\r\n                                  setAccInstagram(account);\r\n                                  togglePopup();\r\n                                }}\r\n                              >\r\n                                View\r\n                              </small>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            {account.linkedin.likes < 1 &&\r\n                            account.linkedin.comments < 1 &&\r\n                            account.linkedin.views < 1 &&\r\n                            account.linkedin.impressions < 1 &&\r\n                            account.linkedin.reach < 1 &&\r\n                            account.linkedin.downloads < 1 &&\r\n                            account.linkedin.leads < 1 &&\r\n                            account.linkedin.shares < 1 &&\r\n                            account.linkedin.followers < 1 ? (\r\n                              <small>Unassigned</small>\r\n                            ) : (\r\n                              <small\r\n                                className=\"blue\"\r\n                                onClick={() => {\r\n                                  setMetric(\"linkedin\");\r\n                                  setAccLinkedin(account);\r\n                                  togglePopup();\r\n                                }}\r\n                              >\r\n                                View\r\n                              </small>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    );\r\n                  })}\r\n                </table>\r\n              )}\r\n              {isOpen && (\r\n                <Popup\r\n                  content={\r\n                    <div className=\"cont\">\r\n                      <div className=\"head\">\r\n                        <h3>Percentage met so far</h3>\r\n                      </div>\r\n                      {metric === \"facebook\" ? (\r\n                        <>\r\n                          <div className=\"\">\r\n                            <div>{accFacebook.label} Facebook</div>\r\n                          </div>\r\n                          {numberFacebook.likes !== undefined ||\r\n                          numberFacebook.comments !== undefined ||\r\n                          numberFacebook.impressions !== undefined ||\r\n                          numberFacebook.shares !== undefined ||\r\n                          numberFacebook.views !== undefined ||\r\n                          numberFacebook.reach !== undefined ||\r\n                          numberFacebook.downloads !== undefined ? (\r\n                            <>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">\r\n                                  {`${numberFacebook.likes} of ${itemTotalFacebook.likes}`}\r\n                                </span>\r\n                                <span>{`${totalMetricFacebook.likes}% likes`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.comments} of ${itemTotalFacebook.comments}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.comments}% comments`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.shares} of ${itemTotalFacebook.shares}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.shares}% shares`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.leads} of ${itemTotalFacebook.leads}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.leads}% leads`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.impressions} of ${itemTotalFacebook.impressions}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.impressions}% impressions`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.reach} of ${itemTotalFacebook.reach}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.reach}% reach`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.followers} of ${itemTotalFacebook.followers}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.followers}% followers`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.views} of ${itemTotalFacebook.views}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.views}% views`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberFacebook.downloads} of ${itemTotalFacebook.downloads}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricFacebook.downloads}% downloads`}</span>\r\n                              </p>\r\n                            </>\r\n                          ) : (\r\n                            <center>\r\n                              <LoadingIndicator\r\n                                type=\"Rings\"\r\n                                height={50}\r\n                                width={50}\r\n                              />\r\n                            </center>\r\n                          )}\r\n                        </>\r\n                      ) : metric === \"twitter\" ? (\r\n                        <>\r\n                          <div className=\"\">\r\n                            <div>{accTwitter.label} Twitter</div>\r\n                          </div>\r\n                          {numberTwitter.likes !== undefined ||\r\n                          numberTwitter.comments !== undefined ||\r\n                          numberTwitter.impressions !== undefined ||\r\n                          numberTwitter.shares !== undefined ||\r\n                          numberTwitter.views !== undefined ||\r\n                          numberTwitter.reach !== undefined ||\r\n                          numberTwitter.downloads !== undefined ? (\r\n                            <>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.likes} of ${itemTotalTwitter.likes}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.likes}% likes`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.comments} of ${itemTotalTwitter.comments}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.comments}% comments`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.shares} of ${itemTotalTwitter.shares}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.shares}% retweets`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.leads} of ${itemTotalTwitter.leads}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.leads}% leads`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.impressions} of ${itemTotalTwitter.impressions}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.impressions}% impressions`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.reach} of ${itemTotalTwitter.reach}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.reach}% reach`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.followers} of ${itemTotalTwitter.followers}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.followers}% followers`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.views} of ${itemTotalTwitter.views}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.views}% views`}</span>\r\n                              </p>\r\n                              <p className=\"span\">\r\n                                <span className=\"head\">{`${numberTwitter.downloads} of ${itemTotalTwitter.downloads}`}</span>\r\n                                {/* <span>|</span> */}\r\n                                <span>{`${totalMetricTwitter.downloads}% downloads`}</span>\r\n                              </p>\r\n                            </>\r\n                          ) : (\r\n                            <center>\r\n                              {/* <h4>Checking the KPI</h4> */}\r\n                              <LoadingIndicator\r\n                                type=\"Rings\"\r\n                                height={50}\r\n                                width={50}\r\n                              />\r\n                            </center>\r\n                          )}\r\n                        </>\r\n                      ) : metric === \"instagram\" ? (\r\n                        <>\r\n                          <div className=\"\">\r\n                            <div>{accInstagram.label} Instagram</div>\r\n                          </div>\r\n                          {\r\n                            numberInstagram.likes !== undefined ||\r\n                          numberInstagram.comments !== undefined ||\r\n                          numberInstagram.impressions !== undefined ||\r\n                          numberInstagram.shares !== undefined ||\r\n                          numberInstagram.views !== undefined ||\r\n                          numberInstagram.reach !== undefined ||\r\n                          numberInstagram.saves !== undefined ||\r\n                          numberInstagram.downloads !== undefined\r\n                          ? \r\n                          <>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberInstagram.likes} of ${itemTotalInstagram.likes}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricInstagram.likes}% likes`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberInstagram.comments} of ${itemTotalInstagram.comments}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricInstagram.comments}% comments`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberInstagram.saves} of ${itemTotalInstagram.saves}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricInstagram.saves}% saves`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberInstagram.shares} of ${itemTotalInstagram.shares}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricInstagram.shares}% shares`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberInstagram.leads} of ${itemTotalInstagram.leads}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricInstagram.leads}% leads`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberInstagram.impressions} of ${itemTotalInstagram.impressions}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricInstagram.impressions}% impressions`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberInstagram.reach} of ${itemTotalInstagram.reach}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricInstagram.reach}% reach`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberInstagram.followers} of ${itemTotalInstagram.followers}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricInstagram.followers}% followers`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberInstagram.views} of ${itemTotalInstagram.views}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricInstagram.views}% views`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberInstagram.downloads} of ${itemTotalInstagram.downloads}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricInstagram.downloads}% downloads`}</span>\r\n                          </p>\r\n                          </> : <center>\r\n                          <LoadingIndicator\r\n                            type=\"Rings\"\r\n                            height={50}\r\n                            width={50}\r\n                          /></center>}\r\n                        </>\r\n                      ) : metric === \"linkedin\" ? (\r\n                        <>\r\n                          <div className=\"\">\r\n                            <div>{accLinkedin.label} Linkedin</div>\r\n                          </div>\r\n                          {\r\n                            numberLinkedin.likes !== undefined ||\r\n                            numberLinkedin.comments !== undefined ||\r\n                            numberLinkedin.impressions !== undefined ||\r\n                            numberLinkedin.shares !== undefined ||\r\n                            numberLinkedin.views !== undefined ||\r\n                            numberLinkedin.reach !== undefined ||\r\n                            numberLinkedin.downloads !== undefined ?\r\n                            <>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberLinkedin.likes} of ${itemTotalLinkedin.likes}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricLinkedin.likes}% likes`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberLinkedin.comments} of ${itemTotalLinkedin.comments}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricLinkedin.comments}% comments`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberLinkedin.shares} of ${itemTotalLinkedin.shares}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricLinkedin.shares}% shares`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberLinkedin.leads} of ${itemTotalLinkedin.leads}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricLinkedin.leads}% leads`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberLinkedin.impressions} of ${itemTotalLinkedin.impressions}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricLinkedin.impressions}% impressions`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberLinkedin.reach} of ${itemTotalLinkedin.reach}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricLinkedin.reach}% reach`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberLinkedin.followers} of ${itemTotalLinkedin.followers}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricLinkedin.followers}% followers`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberLinkedin.views} of ${itemTotalLinkedin.views}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricLinkedin.views}% views`}</span>\r\n                          </p>\r\n                          <p className=\"span\">\r\n                            <span className=\"head\">{`${numberLinkedin.downloads} of ${itemTotalLinkedin.downloads}`}</span>\r\n                            {/* <span>|</span> */}\r\n                            <span>{`${totalMetricLinkedin.downloads}% downloads`}</span>\r\n                          </p></> : <center>\r\n                          <LoadingIndicator\r\n                            type=\"Rings\"\r\n                            height={50}\r\n                            width={50}\r\n                          />\r\n                        </center>}\r\n                        </>\r\n                      ) : (\r\n                        <center>\r\n                          {/* <h4>Checking the KPI</h4> */}\r\n                          <LoadingIndicator\r\n                            type=\"Rings\"\r\n                            height={50}\r\n                            width={50}\r\n                          />\r\n                        </center>\r\n                      )}\r\n                    </div>\r\n                  }\r\n                  handleClose={togglePopup}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <center>\r\n            <h2>Please you're not an Admin</h2>\r\n          </center>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Analytics;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { send } from \"emailjs-com\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport firebase from \"./lib/firebase\";\r\nimport Auth from \"./Components/Auth/Auth\";\r\nimport AddAccount from \"./Components/Admin/AddAccount\";\r\nimport AddReport from \"./Components/User/AddReport\";\r\nimport ManagerAnalytics from \"./Components/User/ManagerAnalytics\";\r\nimport Analytics from \"./Components/Admin/Analytics\";\r\n\r\nexport const AuthScreen = React.createContext();\r\nexport const AuthContext = React.createContext();\r\n\r\nfunction App() {\r\n  const accountsRef = firebase.firestore().collection(\"account\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [locale, setLocale] = useState(\"\");\r\n  const [isLogged, setIsLogged] = useState(\"false\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [managerAccounts, setManagerAccounts] = useState([]);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isWeekend, setIsWeekend] = useState(false);\r\n\r\n  const setAuthScreen = () => {\r\n    localStorage.setItem(\"isLogged\", \"true\");\r\n    localStorage.setItem(\"isRegistered\", \"true\");\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        localStorage.setItem(\"isLogged\", \"false\");\r\n      })\r\n      .then(() => {\r\n        setLocale(localStorage.getItem(\"isLogged\"));\r\n        window.location.pathname = \"/\";\r\n      });\r\n  };\r\n\r\n  const addToFacebook = (id, newAccount) => {\r\n    setLoading(true);\r\n    accountsRef\r\n      .doc(id)\r\n      .collection(\"facebook\")\r\n      .doc(newAccount.id)\r\n      .set(newAccount)\r\n      .catch((err) => {\r\n        alert(err);\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n        // alert(\"Report added\");\r\n        // console.log(newAccount);\r\n      });\r\n    // setLoading(false);\r\n  };\r\n\r\n  const addToInstagram = (id, newAccount) => {\r\n    setLoading(true);\r\n    accountsRef\r\n      .doc(id)\r\n      .collection(\"instagram\")\r\n      .doc(newAccount.id)\r\n      .set(newAccount)\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(err);\r\n        setLoading(false);\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n        // alert(\"Report added\");\r\n        console.log(newAccount);\r\n      });\r\n    // setLoading(false);\r\n  };\r\n\r\n  const addToLinkedin = (id, newAccount) => {\r\n    setLoading(true);\r\n    accountsRef\r\n      .doc(id)\r\n      .collection(\"linkedin\")\r\n      .doc(newAccount.id)\r\n      .set(newAccount)\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(err);\r\n        setLoading(false);\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n        alert(\"Report added\");\r\n        window.location.pathname = \"/\";\r\n        // console.log(newAccount);\r\n      });\r\n    // setLoading(false);\r\n  };\r\n\r\n  const addToTwitter = (id, newAccount) => {\r\n    setLoading(true);\r\n    accountsRef\r\n      .doc(id)\r\n      .collection(\"twitter\")\r\n      .doc(newAccount.id)\r\n      .set(newAccount)\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(err);\r\n        setLoading(false);\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n        // alert(\"Report added\");\r\n        console.log(newAccount);\r\n      });\r\n    // setLoading(false);\r\n  };\r\n\r\n  const addUser = (newUser) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(newUser.id)\r\n      .set(newUser)\r\n      .then(() => {\r\n        // console.log(newUser)\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleAddAccount = (newAccount) => {\r\n    setLoading(true);\r\n    accountsRef\r\n      .doc(newAccount.id)\r\n      .get()\r\n      .then((res) => {\r\n        if (res.exists) {\r\n          accountsRef\r\n            .doc(newAccount.id)\r\n            .update(newAccount)\r\n            .catch((err) => {\r\n              console.log(err);\r\n              alert(err);\r\n              setLoading(false);\r\n            })\r\n            .then(() => {\r\n              setLoading(false);\r\n              alert(\"Account added\");\r\n              window.location.pathname = \"/\";\r\n            });\r\n        } else {\r\n          accountsRef\r\n            .doc(newAccount.id)\r\n            .set(newAccount)\r\n            .catch((err) => {\r\n              console.log(err);\r\n              alert(err);\r\n              setLoading(false);\r\n            })\r\n            .then(() => {\r\n              setLoading(false);\r\n              alert(\"Account added\");\r\n              window.location.pathname = \"/\";\r\n              // console.log(newAccount);\r\n            });\r\n        }\r\n      });\r\n\r\n    // setLoading(false);\r\n  };\r\n\r\n  const getManagerAccounts = () => {\r\n    accountsRef\r\n      .where(\"manager\", \"==\", currentUser.displayName)\r\n      .onSnapshot((querySnapshot) => {\r\n        const items = [];\r\n        querySnapshot.forEach((doc) => {\r\n          items.push(doc.data());\r\n        });\r\n        setManagerAccounts(items);\r\n        // return items\r\n      });\r\n    // console.log(managerAccounts)\r\n  };\r\n\r\n  const getAccounts = () => {\r\n    accountsRef.onSnapshot((querySnapshot) => {\r\n      const items = [];\r\n      querySnapshot.forEach((doc) => {\r\n        items.push(doc.data());\r\n      });\r\n      setAccounts(items);\r\n    });\r\n    // console.log(accounts);\r\n  };\r\n\r\n  const handleSendEmail = () => {\r\n    send(\r\n      \"service_leolhdo\",\r\n      \"template_dqdqsfn\",\r\n      {\r\n        from_name: \"Loose Board bot\",\r\n        to_name: currentUser.displayName,\r\n        to_email: currentUser.email,\r\n        message: \"It's time for your daily report, Ensure to do so\",\r\n        reply_to: \"\",\r\n      },\r\n      \"user_TcK80igUFauKfN3Gqb1QS\"\r\n    )\r\n      .then((response) => {\r\n        console.log(\"SUCCESS!\", response.status, response.text);\r\n        setIsWeekend(isWeekend);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"FAILED...\", err);\r\n      });\r\n    // console.log(\"Happening\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLocale(localStorage.getItem(\"isLogged\"));\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n    });\r\n    currentUser ? getManagerAccounts() : console.log(\"No user yet\");\r\n    getAccounts();\r\n    currentUser\r\n      ? currentUser.email.includes(\"seun\") ||\r\n        currentUser.email.includes(\"ized\") ||\r\n        currentUser.email.includes(\"kemi\") ||\r\n        currentUser.email.includes(\"charles\") ||\r\n        currentUser.email.includes(\"ughoro\") ||\r\n        currentUser.email.includes(\"joan\") ||\r\n        currentUser.email.includes(\"mobola\")\r\n        ? setIsAdmin(true)\r\n        : setIsAdmin(false)\r\n      : console.log(\"no currentUser\");\r\n    // console.log(currentUser);\r\n  }, [currentUser, isAdmin, locale]);\r\n\r\n  useEffect(() => {\r\n    var currentTime = new Date();\r\n    var year = currentTime.getFullYear();\r\n    var month = currentTime.getMonth();\r\n    var day = currentTime.getDate();\r\n    var hour = 18;\r\n    var minute = 0;\r\n    var second = 0;\r\n    var atSix = new Date(year, month, day, hour, minute, second);\r\n    var positiveDifference = atSix.getTime() - currentTime.getTime();\r\n    var negativeDifference =\r\n      86400000 - (currentTime.getTime() - atSix.getTime());\r\n    var delay =\r\n      atSix.getTime() > currentTime.getTime()\r\n        ? positiveDifference\r\n        : negativeDifference;\r\n\r\n    // console.log(atSix);\r\n    // console.log(delay);\r\n\r\n    // 86400000 milliseconds in 1 day\r\n\r\n    const handleInterval = () =>\r\n      setInterval(handleSendEmail, 86400000, handleSendEmail);\r\n\r\n    currentUser && !isAdmin && !isWeekend\r\n      ? setTimeout(() => {\r\n          handleInterval();\r\n        }, delay)\r\n      : clearInterval(handleInterval());\r\n  }, [currentUser, isAdmin, isWeekend]);\r\n\r\n  useEffect(() => {\r\n    var day = new Date().getDay();\r\n    setIsWeekend(day === 6 || day === 0);\r\n    // console.log(isWeekend);\r\n  }, [isWeekend]);\r\n\r\n  useEffect(() => {}, [loading, isAdmin]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        setCurrentUser,\r\n        handleAddAccount,\r\n        addToFacebook,\r\n        addToInstagram,\r\n        addToLinkedin,\r\n        addToTwitter,\r\n        setIsAdmin,\r\n        handleLogout,\r\n        isAdmin,\r\n        managerAccounts,\r\n        currentUser,\r\n        loading,\r\n        accounts,\r\n      }}\r\n    >\r\n      <AuthScreen.Provider value={{ setAuthScreen, setIsLogged, addUser }}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                {locale === \"true\" && isAdmin ? (\r\n                  <Analytics />\r\n                ) : locale === \"true\" && !isAdmin ? (\r\n                  <ManagerAnalytics />\r\n                ) : (\r\n                  <Auth />\r\n                )}\r\n              </Route>\r\n              <Route exact path=\"/home\">\r\n                {isAdmin ? <Analytics /> : <ManagerAnalytics />}\r\n              </Route>\r\n              <Route exact path=\"/auth\">\r\n                <Auth />\r\n              </Route>\r\n              <Route exact path=\"/addReport\">\r\n                <AddReport />\r\n              </Route>\r\n              <Route exact path=\"/addAccount\">\r\n                <AddAccount />\r\n              </Route>\r\n              <Route exact path=\"/analytics\">\r\n                <Analytics />\r\n              </Route>\r\n              <Route exact path=\"/managerAnalytics\">\r\n                <ManagerAnalytics />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </AuthScreen.Provider>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}